{
  "version": "experimental",
  "tags": [
    {
      "name": "pb-i18n",
      "path": "./src/pb-i18n.js",
      "description": "Insert translated text somewhere on an HTML page. If no translation is found,\ndisplay the contained content.",
      "attributes": [
        {
          "name": "key",
          "description": "The i18n key to use for looking up the translation.",
          "type": "string",
          "default": "\"missing-key\""
        },
        {
          "name": "options",
          "description": "Optional interpolation parameters to be passed to the\ntranslation function",
          "type": "object"
        }
      ],
      "properties": [
        {
          "name": "key",
          "attribute": "key",
          "description": "The i18n key to use for looking up the translation.",
          "type": "string",
          "default": "\"missing-key\""
        },
        {
          "name": "options",
          "attribute": "options",
          "description": "Optional interpolation parameters to be passed to the\ntranslation function",
          "type": "object"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "unnamed default slot"
        }
      ]
    },
    {
      "name": "dts-client",
      "path": "./src/dts-client.js",
      "description": "A client for the Distributed Text Services (DTS) protocol. This defines an API\nfor working with collections of text.",
      "attributes": [
        {
          "name": "baseUri",
          "type": "string"
        },
        {
          "name": "data",
          "type": "object"
        },
        {
          "name": "collection",
          "type": "string"
        },
        {
          "name": "page",
          "type": "number"
        },
        {
          "name": "perPage",
          "type": "number"
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "baseUri",
          "attribute": "baseUri",
          "type": "string"
        },
        {
          "name": "data",
          "attribute": "data",
          "type": "object"
        },
        {
          "name": "collection",
          "attribute": "collection",
          "type": "string"
        },
        {
          "name": "page",
          "attribute": "page",
          "type": "number"
        },
        {
          "name": "perPage",
          "attribute": "perPage",
          "type": "number"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-start-update",
          "description": "Fired before the element updates its content"
        },
        {
          "name": "pb-results-received",
          "description": "Fired when results are received from the server"
        },
        {
          "name": "pb-end-update",
          "description": "Fired after the element has finished updating its content"
        },
        {
          "name": "dts-endpoint",
          "description": "When received sets the endpoint to the one passed in from the event"
        },
        {
          "name": "pb-load",
          "description": "When received triggers the refresh accorting to the selected page"
        }
      ],
      "slots": [
        {
          "name": "toolbar",
          "description": "toolbar area"
        },
        {
          "name": "pagination",
          "description": "pagination area"
        }
      ]
    },
    {
      "name": "dts-select-endpoint",
      "path": "./src/dts-select-endpoint.js",
      "description": "A dropdown to select a DTS endpoint from a configured list.\nThe list may either be given as a JSON-formatted string within the\n`endpoints` property or it can be loaded from a JSON file whose path\nis specified via the `load` property.\n\nThe JSON should contain an array of objects, each having an `url` and\n`title` property.",
      "attributes": [
        {
          "name": "endpoint",
          "description": "The currently selected endpoint. Will be set from URL parameter if present.",
          "type": "string"
        },
        {
          "name": "auto",
          "description": "Set to true to automatically select the first endpoint",
          "type": "boolean"
        },
        {
          "name": "endpoints",
          "description": "Array of endpoints to select from, each being an object with\nproperties `url` and `title`.",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "label",
          "type": "string",
          "default": "\"dts.endpoint\""
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "endpoint",
          "attribute": "endpoint",
          "description": "The currently selected endpoint. Will be set from URL parameter if present.",
          "type": "string"
        },
        {
          "name": "auto",
          "attribute": "auto",
          "description": "Set to true to automatically select the first endpoint",
          "type": "boolean"
        },
        {
          "name": "endpoints",
          "attribute": "endpoints",
          "description": "Array of endpoints to select from, each being an object with\nproperties `url` and `title`.",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "label",
          "attribute": "label",
          "type": "string",
          "default": "\"dts.endpoint\""
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "dts-endpoint",
          "description": "Sets the endpoint"
        }
      ]
    },
    {
      "name": "pb-ajax",
      "path": "./src/pb-ajax.js",
      "description": "Triggers an action on the server and shows a dialog\nupon completion. Used for the \"recompile ODD\" and other\nactions.\n\nThe parameters sent to the server-side script will be copied\nfrom the `pb-view` to which this component subscribes, see pb-update event.",
      "attributes": [
        {
          "name": "url",
          "description": "the URL to send a request to",
          "type": "string"
        },
        {
          "name": "title",
          "description": "Title of link that triggers the request",
          "type": "string"
        },
        {
          "name": "event",
          "description": "If set, emits an event with the given name to the channel\nthis component is subscribed to.",
          "type": "string"
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "url",
          "attribute": "url",
          "description": "the URL to send a request to",
          "type": "string"
        },
        {
          "name": "title",
          "attribute": "title",
          "description": "Title of link that triggers the request",
          "type": "string"
        },
        {
          "name": "event",
          "attribute": "event",
          "description": "If set, emits an event with the given name to the channel\nthis component is subscribed to.",
          "type": "string"
        },
        {
          "name": "dialogTemplate",
          "type": "TemplateResult"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-start-update",
          "description": "Fired before the element updates its content"
        },
        {
          "name": "pb-end-update",
          "description": "Fired after the element has finished updating its content"
        },
        {
          "name": "pb-update",
          "description": "When received, copies request parameters from the event"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "unnamed slot for link text"
        },
        {
          "name": "title",
          "description": "dialog title"
        }
      ]
    },
    {
      "name": "pb-load",
      "path": "./src/pb-load.js",
      "description": "Dynamically load data by calling a server-side script, optionally triggered by an event.\nThis is used for e.g. the document list on the start page or the table\nof contents.",
      "attributes": [
        {
          "name": "url",
          "description": "The URL for the AJAX request. If a relative URL is passed, it will be resolved\neither against the app root (if known) or the location of the webcomponent.",
          "type": "string"
        },
        {
          "name": "src",
          "description": "ID of the pb-document this element is connected to. The document path to\nload will be taken from the pb-document.",
          "type": "string"
        },
        {
          "name": "container",
          "description": "The container element into which the results returned by\nthe AJAX request will be loaded.",
          "type": "string"
        },
        {
          "name": "fix-links",
          "description": "If set, relative links (img, a) will be made absolute.",
          "type": "boolean"
        },
        {
          "name": "start",
          "description": "Start offset to use for showing paginated content.",
          "type": "number"
        },
        {
          "name": "userParams",
          "type": "object"
        },
        {
          "name": "auto",
          "description": "Should content be loaded immediately when the component is initialized?",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "loadOnce",
          "description": "Only load content once, not every time a `pb-load` event is received.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "history",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "event",
          "type": "string",
          "default": "\"pb-load\""
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "url",
          "attribute": "url",
          "description": "The URL for the AJAX request. If a relative URL is passed, it will be resolved\neither against the app root (if known) or the location of the webcomponent.",
          "type": "string"
        },
        {
          "name": "src",
          "attribute": "src",
          "description": "ID of the pb-document this element is connected to. The document path to\nload will be taken from the pb-document.",
          "type": "string"
        },
        {
          "name": "container",
          "attribute": "container",
          "description": "The container element into which the results returned by\nthe AJAX request will be loaded.",
          "type": "string"
        },
        {
          "name": "fixLinks",
          "attribute": "fix-links",
          "description": "If set, relative links (img, a) will be made absolute.",
          "type": "boolean"
        },
        {
          "name": "start",
          "attribute": "start",
          "description": "Start offset to use for showing paginated content.",
          "type": "number"
        },
        {
          "name": "userParams",
          "attribute": "userParams",
          "type": "object"
        },
        {
          "name": "auto",
          "attribute": "auto",
          "description": "Should content be loaded immediately when the component is initialized?",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "loadOnce",
          "attribute": "loadOnce",
          "description": "Only load content once, not every time a `pb-load` event is received.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "history",
          "attribute": "history",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "event",
          "attribute": "event",
          "type": "string",
          "default": "\"pb-load\""
        },
        {
          "name": "loaded",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-start-update",
          "description": "Fired before the element updates its content"
        },
        {
          "name": "pb-end-update",
          "description": "Fired after the element has finished updating its content"
        },
        {
          "name": "pb-results-received",
          "description": "Fired when the component received content from the server"
        },
        {
          "name": "pb-toggle",
          "description": "When received, changes the state of the feature"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "default unnamed slot for content"
        }
      ]
    },
    {
      "name": "pb-browse-docs",
      "path": "./src/pb-browse-docs.js",
      "description": "Component to browse through a collection of documents with sorting, filtering and facets.",
      "attributes": [
        {
          "name": "collection",
          "type": "string"
        },
        {
          "name": "facets",
          "type": "object"
        },
        {
          "name": "login",
          "description": "Id of the pb-login element to connect to",
          "type": "string"
        },
        {
          "name": "group",
          "description": "If set, requires the logged in user to be member of\nthe given group.",
          "type": "string"
        },
        {
          "name": "sort-options",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "sortLabel",
          "type": "string",
          "default": "\"browse.sort\""
        },
        {
          "name": "sort-by",
          "type": "string",
          "default": "\"default\""
        },
        {
          "name": "filter",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "filter-options",
          "type": "array",
          "default": "[{\"label\":\"Title\",\"value\":\"title\"}]"
        },
        {
          "name": "filterByLabel",
          "type": "string",
          "default": "\"browse.filter\""
        },
        {
          "name": "filter-by",
          "type": "string",
          "default": "\"title\""
        },
        {
          "name": "url",
          "description": "The URL for the AJAX request. If a relative URL is passed, it will be resolved\neither against the app root (if known) or the location of the webcomponent.",
          "type": "string"
        },
        {
          "name": "src",
          "description": "ID of the pb-document this element is connected to. The document path to\nload will be taken from the pb-document.",
          "type": "string"
        },
        {
          "name": "container",
          "description": "The container element into which the results returned by\nthe AJAX request will be loaded.",
          "type": "string"
        },
        {
          "name": "fix-links",
          "description": "If set, relative links (img, a) will be made absolute.",
          "type": "boolean"
        },
        {
          "name": "start",
          "description": "Start offset to use for showing paginated content.",
          "type": "number"
        },
        {
          "name": "userParams",
          "type": "object"
        },
        {
          "name": "auto",
          "description": "Should content be loaded immediately when the component is initialized?",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "loadOnce",
          "description": "Only load content once, not every time a `pb-load` event is received.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "history",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "event",
          "type": "string",
          "default": "\"pb-load\""
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "collection",
          "attribute": "collection",
          "type": "string"
        },
        {
          "name": "facets",
          "attribute": "facets",
          "type": "object"
        },
        {
          "name": "login",
          "attribute": "login",
          "description": "Id of the pb-login element to connect to",
          "type": "string"
        },
        {
          "name": "group",
          "attribute": "group",
          "description": "If set, requires the logged in user to be member of\nthe given group.",
          "type": "string"
        },
        {
          "name": "sortOptions",
          "attribute": "sort-options",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "sortLabel",
          "attribute": "sortLabel",
          "type": "string",
          "default": "\"browse.sort\""
        },
        {
          "name": "sortBy",
          "attribute": "sort-by",
          "type": "string",
          "default": "\"default\""
        },
        {
          "name": "filter",
          "attribute": "filter",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "filterOptions",
          "attribute": "filter-options",
          "type": "array",
          "default": "[{\"label\":\"Title\",\"value\":\"title\"}]"
        },
        {
          "name": "filterByLabel",
          "attribute": "filterByLabel",
          "type": "string",
          "default": "\"browse.filter\""
        },
        {
          "name": "filterBy",
          "attribute": "filter-by",
          "type": "string",
          "default": "\"title\""
        },
        {
          "name": "url",
          "attribute": "url",
          "description": "The URL for the AJAX request. If a relative URL is passed, it will be resolved\neither against the app root (if known) or the location of the webcomponent.",
          "type": "string"
        },
        {
          "name": "src",
          "attribute": "src",
          "description": "ID of the pb-document this element is connected to. The document path to\nload will be taken from the pb-document.",
          "type": "string"
        },
        {
          "name": "container",
          "attribute": "container",
          "description": "The container element into which the results returned by\nthe AJAX request will be loaded.",
          "type": "string"
        },
        {
          "name": "fixLinks",
          "attribute": "fix-links",
          "description": "If set, relative links (img, a) will be made absolute.",
          "type": "boolean"
        },
        {
          "name": "start",
          "attribute": "start",
          "description": "Start offset to use for showing paginated content.",
          "type": "number"
        },
        {
          "name": "userParams",
          "attribute": "userParams",
          "type": "object"
        },
        {
          "name": "auto",
          "attribute": "auto",
          "description": "Should content be loaded immediately when the component is initialized?",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "loadOnce",
          "attribute": "loadOnce",
          "description": "Only load content once, not every time a `pb-load` event is received.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "history",
          "attribute": "history",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "event",
          "attribute": "event",
          "type": "string",
          "default": "\"pb-load\""
        },
        {
          "name": "loaded",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-collection",
          "description": "Sent to inform e.g. pb-upload about current collection"
        },
        {
          "name": "pb-search-resubmit",
          "description": "When received, set facet values as received from the event"
        },
        {
          "name": "pb-login",
          "description": "When received, check if user is allowed to modify the documents"
        },
        {
          "name": "pb-start-update",
          "description": "Fired before the element updates its content"
        },
        {
          "name": "pb-end-update",
          "description": "Fired after the element has finished updating its content"
        },
        {
          "name": "pb-results-received",
          "description": "Fired when the component received content from the server"
        },
        {
          "name": "pb-toggle",
          "description": "When received, changes the state of the feature"
        }
      ],
      "slots": [
        {
          "name": "toolbar",
          "description": "toolbar area"
        },
        {
          "name": "",
          "description": "unnamed default slot"
        },
        {
          "name": "footer",
          "description": "footer area"
        }
      ]
    },
    {
      "name": "pb-code-editor",
      "path": "./src/pb-code-editor.js",
      "description": "A wrapper for the popular codemirror code editor.",
      "attributes": [
        {
          "name": "code",
          "description": "the code as a string",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "mode",
          "description": "the language mode e.g. 'javascript' or 'xquery'.",
          "type": "string",
          "default": "\"javascript\""
        },
        {
          "name": "placeholder",
          "description": "placeholder if code is empty",
          "type": "string"
        },
        {
          "name": "tabSize",
          "description": "tab indent size",
          "type": "number",
          "default": "2"
        },
        {
          "name": "label",
          "description": "label for the editor",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "linter",
          "default": "\"\""
        }
      ],
      "properties": [
        {
          "name": "code",
          "attribute": "code",
          "description": "the code as a string",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "mode",
          "attribute": "mode",
          "description": "the language mode e.g. 'javascript' or 'xquery'.",
          "type": "string",
          "default": "\"javascript\""
        },
        {
          "name": "placeholder",
          "attribute": "placeholder",
          "description": "placeholder if code is empty",
          "type": "string"
        },
        {
          "name": "tabSize",
          "attribute": "tabSize",
          "description": "tab indent size",
          "type": "number",
          "default": "2"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "label for the editor",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "linter",
          "attribute": "linter",
          "default": "\"\""
        }
      ],
      "events": [
        {
          "name": "code-changed"
        },
        {
          "name": "linting-error"
        }
      ]
    },
    {
      "name": "pb-code-highlight",
      "path": "./src/pb-code-highlight.js",
      "description": "Highlight a code snippet. The snippet may either be passed in a template child\nelement, which could contain HTML or text. If no template child is present, the\ncomponent will take any text content contained in it and highlight it. One can also\npass the code to be highlighted in the `code` property.",
      "attributes": [
        {
          "name": "code",
          "description": "The code to be highlighted as a string. If not set,\nthis will be populated from either a template child element\nor the element's text content.",
          "type": "string"
        },
        {
          "name": "language",
          "description": "The language to be used for syntax highlighting.",
          "type": "string",
          "default": "\"xml\""
        },
        {
          "name": "theme",
          "description": "Highlighting theme to use: 'coy', 'dark', 'funky', 'okaida', 'solarizedlight',\n'tomorrow', 'twilight' or 'default'.",
          "type": "string",
          "default": "\"default\""
        },
        {
          "name": "line-numbers",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "code",
          "attribute": "code",
          "description": "The code to be highlighted as a string. If not set,\nthis will be populated from either a template child element\nor the element's text content.",
          "type": "string"
        },
        {
          "name": "language",
          "attribute": "language",
          "description": "The language to be used for syntax highlighting.",
          "type": "string",
          "default": "\"xml\""
        },
        {
          "name": "theme",
          "attribute": "theme",
          "description": "Highlighting theme to use: 'coy', 'dark', 'funky', 'okaida', 'solarizedlight',\n'tomorrow', 'twilight' or 'default'.",
          "type": "string",
          "default": "\"default\""
        },
        {
          "name": "lineNumbers",
          "attribute": "line-numbers",
          "type": "boolean",
          "default": "false"
        }
      ]
    },
    {
      "name": "pb-codepen",
      "path": "./src/pb-codepen.js",
      "description": "Embed a codepen project to show live code. Used for some documentation examples.",
      "attributes": [
        {
          "name": "user",
          "description": "The user which created the codepen",
          "type": "string"
        },
        {
          "name": "hash",
          "description": "Identifies the pen",
          "type": "string"
        },
        {
          "name": "preview",
          "description": "If set, the codepen will not load before being\nclicked by the user",
          "type": "boolean"
        },
        {
          "name": "height",
          "description": "Height of the iframe in pixel",
          "type": "number",
          "default": "256"
        },
        {
          "name": "theme",
          "description": "Either 'dark' or 'light'",
          "type": "string",
          "default": "\"light\""
        }
      ],
      "properties": [
        {
          "name": "user",
          "attribute": "user",
          "description": "The user which created the codepen",
          "type": "string"
        },
        {
          "name": "hash",
          "attribute": "hash",
          "description": "Identifies the pen",
          "type": "string"
        },
        {
          "name": "preview",
          "attribute": "preview",
          "description": "If set, the codepen will not load before being\nclicked by the user",
          "type": "boolean"
        },
        {
          "name": "height",
          "attribute": "height",
          "description": "Height of the iframe in pixel",
          "type": "number",
          "default": "256"
        },
        {
          "name": "theme",
          "attribute": "theme",
          "description": "Either 'dark' or 'light'",
          "type": "string",
          "default": "\"light\""
        }
      ]
    },
    {
      "name": "pb-collapse",
      "path": "./src/pb-collapse.js",
      "description": "A collapsible block: in collapsed state it only shows a header and expands if clicked.\nThe header should go into slot `collapse-trigger`, the content into `collapse-content`.\nExample:\n\n```html\n<pb-collapse>\n   <div slot=\"collapse-trigger\">\n       Metadata\n   </div>\n   <pb-view slot=\"collapse-content\" src=\"document1\" subscribe=\"transcription\" xpath=\"//teiHeader\"></pb-view>\n</pb-collapse>\n```",
      "attributes": [
        {
          "name": "horizontal",
          "type": "boolean",
          "default": "false",
          "deprecatedMessage": "Corresponds to the iron-collapse's horizontal property."
        },
        {
          "name": "no-animation",
          "description": "Corresponds to the iron-collapse's noAnimation property.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "opened",
          "description": "Whether currently expanded.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "expand-icon",
          "description": "The iron-icon when collapsed. Value must be one of the icons defined by iron-icons",
          "type": "string",
          "default": "\"icons:expand-more\""
        },
        {
          "name": "collapse-icon",
          "description": "The icon when expanded.",
          "type": "string",
          "default": "\"icons:expand-less\""
        },
        {
          "name": "no-icons",
          "description": "Whether to hide the expand/collapse icon.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "horizontal",
          "attribute": "horizontal",
          "type": "boolean",
          "default": "false",
          "deprecatedMessage": "Corresponds to the iron-collapse's horizontal property."
        },
        {
          "name": "noAnimation",
          "attribute": "no-animation",
          "description": "Corresponds to the iron-collapse's noAnimation property.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "opened",
          "attribute": "opened",
          "description": "Whether currently expanded.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "expandIcon",
          "attribute": "expand-icon",
          "description": "The iron-icon when collapsed. Value must be one of the icons defined by iron-icons",
          "type": "string",
          "default": "\"icons:expand-more\""
        },
        {
          "name": "collapseIcon",
          "attribute": "collapse-icon",
          "description": "The icon when expanded.",
          "type": "string",
          "default": "\"icons:expand-less\""
        },
        {
          "name": "noIcons",
          "attribute": "no-icons",
          "description": "Whether to hide the expand/collapse icon.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "expandOnClick",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-collapse-open",
          "description": "Fires opening the collapsed section"
        }
      ],
      "slots": [
        {
          "name": "collapse-trigger",
          "description": "trigger toggling collapsed content on/off"
        },
        {
          "name": "collapse-content",
          "description": "content to be collapsed"
        }
      ],
      "cssProperties": [
        {
          "name": "--pb-collapse-icon-padding",
          "description": "0 10px 0 0"
        }
      ]
    },
    {
      "name": "pb-demo-snippet",
      "path": "./src/docs/pb-demo-snippet.js",
      "description": "Viewer for demo code.",
      "attributes": [
        {
          "name": "title",
          "type": "string",
          "default": "\"TEI Publisher Webcomponents Example\""
        },
        {
          "name": "code",
          "type": "string",
          "default": "\"Loading ...\""
        }
      ],
      "properties": [
        {
          "name": "title",
          "attribute": "title",
          "type": "string",
          "default": "\"TEI Publisher Webcomponents Example\""
        },
        {
          "name": "code",
          "attribute": "code",
          "type": "string",
          "default": "\"Loading ...\""
        }
      ]
    },
    {
      "name": "pb-popover",
      "path": "./src/pb-popover.js",
      "description": "Show a popover. It may either \n\n1. be attached to another element on the page which serves as a trigger. For this the\n`for` property must be specified and should contain the ID of the trigger element. \nThe whole content of the `pb-popover` element will be shown in the popup.\n\n2. if no `for` property is specified, the `pb-popover` acts itself as the trigger. The trigger\ntext is either taken from a slot named `default` - or the default slot (i.e. the content of the element).\nThe content to show in the popup should be supplied in a slot named `alternate`. It is recommended to use an\nHTML `template` to specify the alternate, so it is ignored by the browser:\n\n```html\n<pb-popover theme=\"material\">\n      <span slot=\"default\">ipsum dolor sit amet</span>\n      <template slot=\"alternate\">\n          <p>At vero eos et <strong>accusam</strong> et justo duo dolores<br>\n          et ea rebum.</p>\n      </template>\n</pb-popover>\n```\n\nIf property `persistent` is true, the popover will be shown\non click. Otherwise display a tooltip on mouseover.\n\n`pb-popover` uses the tippy.js library for the popup.\n\n## Styling\n\nWhen showing the popup, the popup content will either be added to the parent shadow DOM - if the `pb-popover`\nis located inside the shadow DOM of another element like `pb-view`; or the document body. This has an\neffect on where CSS styles can be defined: within a `pb-view`, only the styles specified inside the\nCSS attached to the ODD are applied.",
      "attributes": [
        {
          "name": "persistent",
          "description": "If true, show the popup on click instead of mouseover.",
          "type": "Boolean",
          "default": "false"
        },
        {
          "name": "for",
          "description": "The id of a trigger element (e.g. a link) to which the popover will\nbe attached. If not set, the trigger is the pb-popover itself.",
          "type": "String"
        },
        {
          "name": "theme",
          "description": "The tippy theme to use.",
          "type": "\"material\" | \"light\" | \"translucent\" | \"light-border\""
        },
        {
          "name": "placement",
          "description": "Preferred placement of the popup.\nDefault is 'auto'.",
          "type": "\"auto\" | \"top\" | \"bottom\" | \"left\" | \"right\""
        },
        {
          "name": "fallback-placement",
          "description": "Fallback placement if there is more space on another side.\nAccepts same values as `placement`. Separate by space if more than one.",
          "type": "String"
        },
        {
          "name": "popup-class",
          "type": "string"
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "poupClass",
          "description": "Additional class names which will be added to the popup element.\nUse this to apply a specific style to certain popovers, but not others.",
          "type": "String"
        },
        {
          "name": "persistent",
          "attribute": "persistent",
          "description": "If true, show the popup on click instead of mouseover.",
          "type": "Boolean",
          "default": "false"
        },
        {
          "name": "for",
          "attribute": "for",
          "description": "The id of a trigger element (e.g. a link) to which the popover will\nbe attached. If not set, the trigger is the pb-popover itself.",
          "type": "String"
        },
        {
          "name": "theme",
          "attribute": "theme",
          "description": "The tippy theme to use.",
          "type": "\"material\" | \"light\" | \"translucent\" | \"light-border\""
        },
        {
          "name": "placement",
          "attribute": "placement",
          "description": "Preferred placement of the popup.\nDefault is 'auto'.",
          "type": "\"auto\" | \"top\" | \"bottom\" | \"left\" | \"right\""
        },
        {
          "name": "fallbackPlacement",
          "attribute": "fallback-placement",
          "description": "Fallback placement if there is more space on another side.\nAccepts same values as `placement`. Separate by space if more than one.",
          "type": "String"
        },
        {
          "name": "popupClass",
          "attribute": "popup-class",
          "type": "string"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "slots": [
        {
          "name": "default",
          "description": "the content to show for the trigger. If not specified, this will fall back to the unnamed slot."
        },
        {
          "name": "alternate",
          "description": "the content to show in the popup"
        }
      ],
      "cssProperties": [
        {
          "name": "--pb-popover-theme",
          "description": "popup theme to use. One of 'material', 'light', 'translucent' or 'light-border'",
          "default": "\"none\""
        },
        {
          "name": "--pb-popover-link-decoration",
          "description": "text decoration for the trigger",
          "default": "\"inherit\""
        },
        {
          "name": "--pb-popover-max-height",
          "description": "limit the maximum height of the popup",
          "default": "\"calc(100vh - 60px)\""
        },
        {
          "name": "--pb-popover-max-width",
          "description": "limit the max width of the popup"
        },
        {
          "name": "--pb-popover-color",
          "description": "Color of the popup text"
        },
        {
          "name": "--pb-popover-placement",
          "description": "Preferred popup placement, see property `placement`",
          "default": "\"auto\""
        },
        {
          "name": "--pb-popover-fallback-placement",
          "description": "Fallback placements separated by space"
        }
      ]
    },
    {
      "name": "pb-highlight",
      "path": "./src/pb-highlight.js",
      "description": "Link elements to each other: if the user moves the mouse over one element,\nthe others are highlighted by changing their background color. Which elements\nare linked is determined by the `key` property: elements with the same key\nare linked. If the user moves the mouse over an element, the key is sent with\na `pb-highlight` event. Other elements with the same key react to this event.\n\n`pb-highlight` should be output for relevant elements via ODD processing model.\n\n### Styling\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--pb-highlight-color` | Background color to highlight an element | #F9E976\n`--pb-highlight` | Mixin applied to the element's content | `{ display: inline; }`",
      "attributes": [
        {
          "name": "key",
          "description": "The key to which this element is connected.",
          "type": "string"
        },
        {
          "name": "duration",
          "description": "If set to > 0, specifies a duration (in ms) after which\nthe highlighting will be removed again",
          "type": "number",
          "default": "0"
        },
        {
          "name": "scroll",
          "description": "Scroll this element into view when it receives a highlight event",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "highlight-self",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "key",
          "attribute": "key",
          "description": "The key to which this element is connected.",
          "type": "string"
        },
        {
          "name": "duration",
          "attribute": "duration",
          "description": "If set to > 0, specifies a duration (in ms) after which\nthe highlighting will be removed again",
          "type": "number",
          "default": "0"
        },
        {
          "name": "scroll",
          "attribute": "scroll",
          "description": "Scroll this element into view when it receives a highlight event",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "highlightSelf",
          "attribute": "highlight-self",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-highlight-off",
          "description": "Fires removal of all highlights that might have existed before"
        },
        {
          "name": "pb-highlight-on",
          "description": "Fires highlight event with a key passed to which other pb-highlight elements with the same key will react"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "default unnamed slot for highlight content"
        }
      ]
    },
    {
      "name": "pb-link",
      "path": "./src/pb-link.js",
      "description": "Create an internal link: clicking it will cause connected views to\nupdate and load the corresponding document fragment defined by the\nproperties.",
      "attributes": [
        {
          "name": "xml-id",
          "description": "Browse to an xml:id within the document",
          "type": "string"
        },
        {
          "name": "node-id",
          "description": "Browse to an eXist-internal node id, e.g. 3.5.6.1",
          "type": "string"
        },
        {
          "name": "hash",
          "type": "string"
        },
        {
          "name": "path",
          "description": "Browse to a different document",
          "type": "string"
        },
        {
          "name": "odd",
          "description": "Switch the ODD to use for display",
          "type": "string"
        },
        {
          "name": "history",
          "description": "Modify browser history: if set, clicking this\nelement will generate a new history entry in the browser's history.\nOnly use this on one element on the page.",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "xmlId",
          "attribute": "xml-id",
          "description": "Browse to an xml:id within the document",
          "type": "string"
        },
        {
          "name": "nodeId",
          "attribute": "node-id",
          "description": "Browse to an eXist-internal node id, e.g. 3.5.6.1",
          "type": "string"
        },
        {
          "name": "hash",
          "attribute": "hash",
          "type": "string"
        },
        {
          "name": "path",
          "attribute": "path",
          "description": "Browse to a different document",
          "type": "string"
        },
        {
          "name": "odd",
          "attribute": "odd",
          "description": "Switch the ODD to use for display",
          "type": "string"
        },
        {
          "name": "history",
          "attribute": "history",
          "description": "Modify browser history: if set, clicking this\nelement will generate a new history entry in the browser's history.\nOnly use this on one element on the page.",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-refresh",
          "description": "Fires when user clicks the link"
        },
        {
          "name": "pb-collapse-open"
        }
      ]
    },
    {
      "name": "pb-facs-link",
      "path": "./src/pb-facs-link.js",
      "attributes": [
        {
          "name": "facs",
          "description": "URL pointing to the facsimile image to load",
          "type": "string"
        },
        {
          "name": "coordinates",
          "description": "An array of coordinates describing a rectangle to highlight",
          "type": "array"
        },
        {
          "name": "emitOnLoad",
          "type": "boolean"
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "facs",
          "attribute": "facs",
          "description": "URL pointing to the facsimile image to load",
          "type": "string"
        },
        {
          "name": "coordinates",
          "attribute": "coordinates",
          "description": "An array of coordinates describing a rectangle to highlight",
          "type": "array"
        },
        {
          "name": "emitOnLoad",
          "attribute": "emitOnLoad",
          "type": "boolean"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-show-annotation",
          "description": "Fires when mouse hovers over a pb-facs-link, passing image reference and coordinates that pb-facsimile reacts to"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "unnamed default slot for link text"
        }
      ]
    },
    {
      "name": "pb-document",
      "path": "./src/pb-document.js",
      "description": "Represents a Publisher document. It has no visual presentation but holds meta-data\nabout the document to be used by other components like `pb-view`. Every `pb-view`\nreferences a `pb-document`.\n`pb-document` requires an id attribute to allow other components to access it.",
      "attributes": [
        {
          "name": "odd",
          "description": "The odd file which should be used to render this document by default. Might be\noverwritten in a `pb-view`. The odd should be specified by its name without path\nor the `.odd` suffix.",
          "type": "string"
        },
        {
          "name": "view",
          "description": "The default view to be used for displaying this document. Can be either `page`, `div` or `simple`.\nMight be overwritten in a `pb-view`.\n\nValue | Displayed content\n------|------------------\n`page` | content is displayed page by page as determined by tei:pb\n`div` | content is displayed by divisions\n`single` | do not paginate but display entire content at once",
          "type": "string"
        },
        {
          "name": "source-view",
          "type": "string"
        },
        {
          "name": "path",
          "description": "The path to the document to be loaded. Should be relative to `root`.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "root-path",
          "description": "The root collection which will be used to resolve relative paths\nspecified in `path`.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "odd",
          "attribute": "odd",
          "description": "The odd file which should be used to render this document by default. Might be\noverwritten in a `pb-view`. The odd should be specified by its name without path\nor the `.odd` suffix.",
          "type": "string"
        },
        {
          "name": "view",
          "attribute": "view",
          "description": "The default view to be used for displaying this document. Can be either `page`, `div` or `simple`.\nMight be overwritten in a `pb-view`.\n\nValue | Displayed content\n------|------------------\n`page` | content is displayed page by page as determined by tei:pb\n`div` | content is displayed by divisions\n`single` | do not paginate but display entire content at once",
          "type": "string"
        },
        {
          "name": "sourceView",
          "attribute": "source-view",
          "type": "string"
        },
        {
          "name": "path",
          "attribute": "path",
          "description": "The path to the document to be loaded. Should be relative to `root`.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "rootPath",
          "attribute": "root-path",
          "description": "The root collection which will be used to resolve relative paths\nspecified in `path`.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-document",
          "description": "Fires update event"
        }
      ]
    },
    {
      "name": "pb-navigation",
      "path": "./src/pb-navigation.js",
      "description": "Navigate backward/forward in a document. This component does not implement any functionality itself.\nIt just sends a `pb-navigate` event when clicked. You may also assign a shortcut key by setting property\n`keyboard`.",
      "attributes": [
        {
          "name": "keyboard",
          "description": "Register a shortcut key, e.g. 'left' or 'shift+left'",
          "type": "string"
        },
        {
          "name": "direction",
          "description": "The direction to navigate in, either `forward` or `backward`",
          "type": "string",
          "default": "\"forward\""
        },
        {
          "name": "hotkeys",
          "type": "object",
          "default": "{}"
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "true"
        }
      ],
      "properties": [
        {
          "name": "keyboard",
          "attribute": "keyboard",
          "description": "Register a shortcut key, e.g. 'left' or 'shift+left'",
          "type": "string"
        },
        {
          "name": "direction",
          "attribute": "direction",
          "description": "The direction to navigate in, either `forward` or `backward`",
          "type": "string",
          "default": "\"forward\""
        },
        {
          "name": "hotkeys",
          "attribute": "hotkeys",
          "type": "object",
          "default": "{}"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "true"
        }
      ],
      "events": [
        {
          "name": "pb-navigate",
          "description": "Fire event indicating that listening components should navigate in the given direction"
        },
        {
          "name": "pb-update",
          "description": "When received, updates the state of navigation buttons (disables when no forward/backward navigation possible)"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "default unnamed slot"
        }
      ]
    },
    {
      "name": "pb-page",
      "path": "./src/pb-page.js",
      "description": "Configuration element which should wrap around other `pb-` elements.\nAmong other things, this element determines the TEI Publisher\ninstance to which all elements will talk (property `endpoint`), and\ninitializes the i18n language module.",
      "attributes": [
        {
          "name": "app-root",
          "description": "TEI Publisher internal: set to the root URL of the current app",
          "type": "string"
        },
        {
          "name": "template",
          "description": "TEI Publisher internal: set to the current page template.",
          "type": "string"
        },
        {
          "name": "locales",
          "description": "Optional URL pointing to a directory from which additional i18n \nlanguage files will be loaded. The URL should contain placeholders\nfor the language (`lng`) and the namespace (`ns`), e.g.\n\n`resources/i18n/{{ns}}_{{lng}}.json`",
          "type": "string"
        },
        {
          "name": "require-language",
          "description": "If set, the element will wait for a language being set by i18n before\nit sends a `pb-page-ready` event. Elements like `pb-view` will wait\nfor this event before displaying content.",
          "type": "boolean"
        },
        {
          "name": "locale-fallback-ns",
          "description": "Optional list of whitespace separated namespaces which should be searched\nfor translations. By default, only the namespace `common` is queried.\nIf the locale property is specified, an additional namespace `app` is added.\nYou can add more namespace here, e.g. `custom`, if you want to provide\ntranslations for custom apps or components.",
          "type": "string"
        },
        {
          "name": "unresolved",
          "description": "Will be set while the component is loading and unset when\nit is fully loaded. Use to avoid flash of unstyled content\nvia CSS: set `unresolved` on `pb-page` in the HTML and\nadd a CSS rule like:\n\n```css\npb-page[unresolved] {\n     display: none;\n}\n```",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "endpoint",
          "description": "The base URL of the TEI Publisher instance. All nested elements will\ntalk to this instance. By default it is set to the URL the\npage was loaded from.\n\nThe endpoint can be overwritten by providing an HTTP request parameter\n`_target` with an URL.",
          "type": "string",
          "default": "\".\""
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "appRoot",
          "attribute": "app-root",
          "description": "TEI Publisher internal: set to the root URL of the current app",
          "type": "string"
        },
        {
          "name": "template",
          "attribute": "template",
          "description": "TEI Publisher internal: set to the current page template.",
          "type": "string"
        },
        {
          "name": "locales",
          "attribute": "locales",
          "description": "Optional URL pointing to a directory from which additional i18n \nlanguage files will be loaded. The URL should contain placeholders\nfor the language (`lng`) and the namespace (`ns`), e.g.\n\n`resources/i18n/{{ns}}_{{lng}}.json`",
          "type": "string"
        },
        {
          "name": "requireLanguage",
          "attribute": "require-language",
          "description": "If set, the element will wait for a language being set by i18n before\nit sends a `pb-page-ready` event. Elements like `pb-view` will wait\nfor this event before displaying content.",
          "type": "boolean"
        },
        {
          "name": "localeFallbackNs",
          "attribute": "locale-fallback-ns",
          "description": "Optional list of whitespace separated namespaces which should be searched\nfor translations. By default, only the namespace `common` is queried.\nIf the locale property is specified, an additional namespace `app` is added.\nYou can add more namespace here, e.g. `custom`, if you want to provide\ntranslations for custom apps or components.",
          "type": "string"
        },
        {
          "name": "unresolved",
          "attribute": "unresolved",
          "description": "Will be set while the component is loading and unset when\nit is fully loaded. Use to avoid flash of unstyled content\nvia CSS: set `unresolved` on `pb-page` in the HTML and\nadd a CSS rule like:\n\n```css\npb-page[unresolved] {\n     display: none;\n}\n```",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "endpoint",
          "attribute": "endpoint",
          "description": "The base URL of the TEI Publisher instance. All nested elements will\ntalk to this instance. By default it is set to the URL the\npage was loaded from.\n\nThe endpoint can be overwritten by providing an HTTP request parameter\n`_target` with an URL.",
          "type": "string",
          "default": "\".\""
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-page-ready",
          "description": "fired when the endpoint and language settings have been determined"
        },
        {
          "name": "pb-i18n-update",
          "description": "fired when the user selected a different display language"
        },
        {
          "name": "pb-i18n-language",
          "description": "when received, changes the language to the one passed in the event and proceeds to pb-i18-update"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "default unnamed slot for content"
        }
      ]
    },
    {
      "name": "pb-paginate",
      "path": "./src/pb-paginate.js",
      "description": "Display a pagination control from which the user can select a page to view\nfrom a multi-page collection of resources. To determine the number of pages, \n`pb-paginate` listens for the `pb-results-received` event emitted by `pb-load`.\nIf the user clicks on one of the page indicators, a `pb-load` event is emitted,\nwhich should cause the connected `pb-load` element to refresh.",
      "attributes": [
        {
          "name": "total",
          "description": "total number of pages",
          "type": "number",
          "default": "0"
        },
        {
          "name": "start",
          "description": "start page",
          "type": "number",
          "default": "1"
        },
        {
          "name": "per-page",
          "description": "amount of entries per page",
          "type": "number",
          "default": "10"
        },
        {
          "name": "page",
          "description": "the current page",
          "type": "number",
          "default": "1"
        },
        {
          "name": "page-count",
          "description": "the amount of pages",
          "type": "number",
          "default": "10"
        },
        {
          "name": "range",
          "description": "todo",
          "type": "number",
          "default": "5"
        },
        {
          "name": "pages",
          "description": "todo:",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "found-label",
          "description": "i18n key to use for looking up the message showing number of items in list\nor fixed label to display",
          "type": "string",
          "default": "\"browse.items\""
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "total",
          "attribute": "total",
          "description": "total number of pages",
          "type": "number",
          "default": "0"
        },
        {
          "name": "start",
          "attribute": "start",
          "description": "start page",
          "type": "number",
          "default": "1"
        },
        {
          "name": "perPage",
          "attribute": "per-page",
          "description": "amount of entries per page",
          "type": "number",
          "default": "10"
        },
        {
          "name": "page",
          "attribute": "page",
          "description": "the current page",
          "type": "number",
          "default": "1"
        },
        {
          "name": "pageCount",
          "attribute": "page-count",
          "description": "the amount of pages",
          "type": "number",
          "default": "10"
        },
        {
          "name": "range",
          "attribute": "range",
          "description": "todo",
          "type": "number",
          "default": "5"
        },
        {
          "name": "pages",
          "attribute": "pages",
          "description": "todo:",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "foundLabel",
          "attribute": "found-label",
          "description": "i18n key to use for looking up the message showing number of items in list\nor fixed label to display",
          "type": "string",
          "default": "\"browse.items\""
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-load",
          "description": "Fires when user selects new page to show"
        },
        {
          "name": "pb-results-received",
          "description": "When received, recalculates page ranges to display according to the parameters received"
        }
      ]
    },
    {
      "name": "pb-progress",
      "path": "./src/pb-progress.js",
      "description": "A progress bar which becomes active when signal `pb-start-update` is\nbeing sent and is deactivated on `pb-end-update`.",
      "attributes": [
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-start-update",
          "description": "When received, activates the progress bar"
        },
        {
          "name": "pb-end-update",
          "description": "When received, disables the progress bar"
        }
      ]
    },
    {
      "name": "pb-search",
      "path": "./src/pb-search.js",
      "description": "Implements a basic search form, which can be extended with additional inputs.",
      "attributes": [
        {
          "name": "action",
          "type": "string"
        },
        {
          "name": "current-doc",
          "type": "string"
        },
        {
          "name": "value",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "redirect",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "submit-on-load",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "place-holder",
          "type": "string",
          "default": "\"search.placeholder\""
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "action",
          "attribute": "action",
          "type": "string"
        },
        {
          "name": "currentDoc",
          "attribute": "current-doc",
          "type": "string"
        },
        {
          "name": "value",
          "attribute": "value",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "redirect",
          "attribute": "redirect",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "submitOnLoad",
          "attribute": "submit-on-load",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "placeHolder",
          "attribute": "place-holder",
          "type": "string",
          "default": "\"search.placeholder\""
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-load",
          "description": "Fired to perform the actual search with parameters passed to the request"
        },
        {
          "name": "pb-search-resubmit",
          "description": "When received, triggers the search again"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "default unnamed slot"
        }
      ],
      "cssProperties": [
        {
          "name": "--pb-search-label",
          "description": "color Color of the label and underline"
        },
        {
          "name": "--pb-search-input",
          "description": "color Text color for input field"
        },
        {
          "name": "--pb-search-focus",
          "description": "color Color for label and underline if input has focus"
        },
        {
          "name": "--pb-search-suggestions",
          "description": "color Color for the labels shown in the suggestions dropdown"
        }
      ]
    },
    {
      "name": "pb-toggle-feature",
      "path": "./src/pb-toggle-feature.js",
      "description": "Enable or disable a particular display feature by setting a predefined or custom parameter.\nToggling display features can be done server-side or client-side.\n\nIt is important that `pb-toggle-feature` emits and subscribes to the same channel as the target `pb-view`.\n\n# Server side toggling\n\nYou may set the following view parameters which correspond to the properties supported by `pb-view`:\n\n| Parameter | Description |\n| ----------------|-------------|\n| odd | the ODD to use |\n| view | the view type: 'page', 'div' or 'single' |\n| columnSeparator | CSS selector to find elements to use as column separator |\n| xpath | XPath expression to select a portion of the text for display |\n\nFor example, one may switch between page-by-page and by-division view using\n\n```html\n<pb-toggle-feature emit=\"transcription\" name=\"view\" on=\"page\" off=\"div\">Page View</pb-toggle-feature>\n```\n\nIt is also possible to set custom parameters, which will be passed to the ODD as user-defined parameters.\nThis can be used e.g. to implement different views on the text, e.g. a 'diplomatic' and a 'normalized' mode. Both\nviews would be backed by the same ODD and processing model, while the passed in parameter\ncan be used to distinguish the modes.\n\nFor example, the following snippet would result in a custom parameter called `mode` with\neither a value of `dipl` or `norm`. Within processing model predicates it could be queried as\n`$parameters?mode='norm'` to check if the normalized version should be output.\n\n```html\n<pb-toggle-feature name=\"mode\" on=\"diplomatic\" off=\"norm\">Diplomatic View</pb-toggle-feature>\n```\n\nBesides setting a single parameter, you may also set multiple\nproperties on the target `pb-view` via the `properties-on` and `properties-off`\nattributes (as an alternative to `on` and `off`). For example, in 'on' state, you may\nwant to use a different ODD and switch the view to 'page' at the same time:\n\n```html\n<pb-toggle-feature properties-on='{\"odd\": \"myodd\", \"view\": \"page\"}' properties-off='{\"odd\": \"myodd-diplomatic\", \"view\": \"div\"}'>\n     Diplomatic View\n</pb-toggle-feature>\n```\n\n# Client side toggling\n\nThe component can also be used to toggle features client-side, i.e. without requiring a server-roundtrip.\nTo enable this, the `selector` property should be set to a CSS3 selector targetting the HTML elements\nto toggle. In `on` state, the selected elements will be assigned a class `.toggled`.\n\n```html\n<pb-toggle-feature name=\"normalized\" selector=\".choice,.choice-alternate,br\">Normalized View</pb-toggle-feature>\n```\n\nNote that the name attribute is still required: it is used to determine if the feature is in on or off state by\nlooking at request parameters.\n\nInstead of toggling the class, you can also completely disable the elements selected - provided that they are\npublisher components implementing the corresponding `command` method of `pb-mixin`. To disable elements instead of\ntoggling, set the `action` property to *disable*.\n\n```html\n<pb-toggle-feature name=\"plain\" selector=\".tei-foreign,pb-highlight,pb-popover\" action=\"disable\" default=\"off\">Plain Reading View</pb-toggle-feature>\n```",
      "attributes": [
        {
          "name": "name",
          "description": "The name of the feature (required). This will correspond to the name of the custom parameter\npassed to the ODD.",
          "type": "string"
        },
        {
          "name": "selector",
          "description": "(optional) CSS selector: selects the elements to toggle client side (sets or unsets a \nCSS class `.toggled`). Setting this property will not trigger a reload as everything is\nhandled by javascript.",
          "type": "string"
        },
        {
          "name": "on",
          "description": "Value to set the parameter to when the feature is enabled.",
          "type": "string"
        },
        {
          "name": "off",
          "description": "Value to set the parameter to when the feature is disabled.",
          "type": "string"
        },
        {
          "name": "checked",
          "type": "boolean"
        },
        {
          "name": "default",
          "description": "The default setting: either 'on' or 'off'",
          "type": "string",
          "default": "\"on\""
        },
        {
          "name": "action",
          "description": "In combination with a selector specifies the action to be taken, currently one of\n`toggle` (default) or `disable`.",
          "type": "string",
          "default": "\"toggle\""
        },
        {
          "name": "properties-on",
          "description": "Additional properties to set on the pb-view if toggle is in 'on' state.\nPossible properties are 'view', 'odd' and 'columnSeparator'.",
          "type": "object",
          "default": "{}"
        },
        {
          "name": "properties-off",
          "description": "Additional properties to set on the pb-view if toggle is in 'off' state.\nPossible properties are 'view', 'odd' and 'columnSeparator'.",
          "type": "object",
          "default": "{}"
        },
        {
          "name": "init-from-view",
          "description": "If set to false (the default), `pb-toggle-feature` will pass its properties to the\nconnected view before this loads content for the first time. If true,\n`pb-toggle-feature` will initialize its state depending on the setting of the view.\nThis only makes sense for the special properties 'view' and 'odd' though.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "name",
          "attribute": "name",
          "description": "The name of the feature (required). This will correspond to the name of the custom parameter\npassed to the ODD.",
          "type": "string"
        },
        {
          "name": "selector",
          "attribute": "selector",
          "description": "(optional) CSS selector: selects the elements to toggle client side (sets or unsets a \nCSS class `.toggled`). Setting this property will not trigger a reload as everything is\nhandled by javascript.",
          "type": "string"
        },
        {
          "name": "on",
          "attribute": "on",
          "description": "Value to set the parameter to when the feature is enabled.",
          "type": "string"
        },
        {
          "name": "off",
          "attribute": "off",
          "description": "Value to set the parameter to when the feature is disabled.",
          "type": "string"
        },
        {
          "name": "checked",
          "attribute": "checked",
          "type": "boolean"
        },
        {
          "name": "default",
          "attribute": "default",
          "description": "The default setting: either 'on' or 'off'",
          "type": "string",
          "default": "\"on\""
        },
        {
          "name": "action",
          "attribute": "action",
          "description": "In combination with a selector specifies the action to be taken, currently one of\n`toggle` (default) or `disable`.",
          "type": "string",
          "default": "\"toggle\""
        },
        {
          "name": "propertiesOn",
          "attribute": "properties-on",
          "description": "Additional properties to set on the pb-view if toggle is in 'on' state.\nPossible properties are 'view', 'odd' and 'columnSeparator'.",
          "type": "object",
          "default": "{}"
        },
        {
          "name": "propertiesOff",
          "attribute": "properties-off",
          "description": "Additional properties to set on the pb-view if toggle is in 'off' state.\nPossible properties are 'view', 'odd' and 'columnSeparator'.",
          "type": "object",
          "default": "{}"
        },
        {
          "name": "initFromView",
          "attribute": "init-from-view",
          "description": "If set to false (the default), `pb-toggle-feature` will pass its properties to the\nconnected view before this loads content for the first time. If true,\n`pb-toggle-feature` will initialize its state depending on the setting of the view.\nThis only makes sense for the special properties 'view' and 'odd' though.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-toggle",
          "description": "Fired when the feature is toggled, it's changing properties between values of its `on` and `off` state"
        },
        {
          "name": "pb-update",
          "description": "When received, sets the features passed from the event"
        }
      ]
    },
    {
      "name": "pb-select-feature",
      "path": "./src/pb-select-feature.js",
      "description": "Similar to `pb-toggle-feature` but allows you to choose from a list of defined states instead of a simple\non/off toggle. Like `pb-toggle-feature` it can change state server-side as well as client-side. \n\nThe list of states is passed as a JSON array to property `items`:\n\n# Server-side\n\nProperties to be passed to the server are specified as follows:\n\n```javascript\n[\n      {\"name\": \"Diplomatic View\", \"properties\": {\"mode\": \"diplomatic\", \"view\": \"page\"}},\n      {\"name\": \"Normalized View\", \"properties\": {\"mode\": \"norm\", \"view\": \"single\"}}\n]\n```\n\n# Client-side\n\n```javascript\n[\n      {\"name\": \"Diplomatic View\", \"selectors\": [{\"selector\": \".choice,.choice-alternate,br\", \"state\": false},{\"selector\": \".tei-foreign,pb-highlight,pb-popover\", \"command\": \"disable\"}]},\n      {\"name\": \"Normalized View\", \"selectors\": [{\"selector\": \".choice,.choice-alternate,br\", \"state\": true},{\"selector\": \".tei-foreign,pb-highlight,pb-popover\", \"command\": \"disable\"}]},\n      {\"name\": \"Plain Reading View\", \"selectors\": [{\"selector\": \".choice,.choice-alternate,br\", \"state\": true}, {\"selector\": \".tei-foreign,pb-highlight,pb-popover\", \"command\": \"disable\", \"state\": true}]}\n]\n```\n\nEach item in the `selectors` property above defines either a state or a command. *state* will simply add\na css class `.toggled` to the target element when true. If *command* is set to 'disable', it will entirely disable\nthe functionality of selected elements - provided that they are\npublisher components implementing the corresponding `command` method of `pb-mixin`.",
      "attributes": [
        {
          "name": "name",
          "description": "The name of the feature (required). This will correspond to the name of the custom parameter\npassed to the ODD.",
          "type": "string"
        },
        {
          "name": "selected",
          "type": "number"
        },
        {
          "name": "items",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "label",
          "description": "The label to display on top of the drop down",
          "type": "string",
          "default": "\"document.selectFeature\""
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "name",
          "attribute": "name",
          "description": "The name of the feature (required). This will correspond to the name of the custom parameter\npassed to the ODD.",
          "type": "string"
        },
        {
          "name": "selected",
          "attribute": "selected",
          "type": "number"
        },
        {
          "name": "initializing",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "items",
          "attribute": "items",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "The label to display on top of the drop down",
          "type": "string",
          "default": "\"document.selectFeature\""
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-toggle",
          "description": "Fired when a feature is selected from the dropdown and sends the selected properties"
        }
      ]
    },
    {
      "name": "pb-view",
      "path": "./src/pb-view.js",
      "description": "This is the main component for viewing text which has been transformed via an ODD.\nThe document to be viewed is determined by the `pb-document` element the property\n`src` points to. If not overwritten, `pb-view` will use the settings defined by\nthe connected document, like view type, ODD etc.\n\n`pb-view` can display an entire document or just a fragment of it\nas defined by the properties `xpath`, `xmlId` or `nodeId`. The most common use case\nis to set `xpath` to point to a specific part of a document.\n\nNavigating to the next or previous fragment would usually be triggered by a separate\n`pb-navigation` element, which sends a `pb-navigate` event to the `pb-view`. However,\n`pb-view` also implements automatic loading of next/previous fragments if the user\nscrolls the page beyond the current viewport boudaries. To enable this, set property\n`infinite-scroll`.\n\nYou may also define optional parameters to be passed to the ODD in nested `pb-param`\ntags. These parameters can be accessed within the ODD via the `$parameters` map. For\nexample, the following snippet is being used to output breadcrumbs above the main text\nin the documentation view:\n\n```xml\n<section class=\"breadcrumbs\">\n      <pb-view id=\"title-view1\" src=\"document1\" subscribe=\"transcription\">\n          <pb-param name=\"mode\" value=\"breadcrumbs\"/>\n      </pb-view>\n</section>\n```",
      "attributes": [
        {
          "name": "odd",
          "description": "The ODD to use for rendering the document. Overwrites an ODD defined on\n`pb-document`. The odd should be specified by its name without path\nor the `.odd` suffix.",
          "type": "string"
        },
        {
          "name": "view",
          "description": "The view type to use for paginating the document. Either `page`, `div` or `single`.\nOverwrites the same property specified on `pb-document`. Values have the following meaning:\n\nValue | Displayed content\n------|------------------\n`page` | content is displayed page by page as determined by tei:pb\n`div` | content is displayed by divisions\n`single` | do not paginate but display entire content at once",
          "type": "string"
        },
        {
          "name": "node-id",
          "description": "An eXist nodeId. If specified, selects the root of the fragment of the document\nwhich should be displayed. Normally this property is set automatically by pagination.",
          "type": "string"
        },
        {
          "name": "xml-id",
          "description": "An xml:id to be displayed. If specified, this determines the root of the fragment to be\ndisplayed. Use to directly navigate to a specific section.",
          "type": "array"
        },
        {
          "name": "xpath",
          "description": "An optional XPath expression: the root of the fragment to be processed is determined\nby evaluating the given XPath expression. The XPath expression should be absolute.\nThe namespace of the document is declared as default namespace, so no prefixes should\nbe used.\n\nIf the `map` property is used, it may change scope for the displayed fragment.",
          "type": "string"
        },
        {
          "name": "map",
          "description": "If defined denotes the local name of an XQuery function in `modules/map.xql`, which will be called\nwith the current root node and should return the node of a mapped fragment. This is helpful if one\nwants, for example, to show a translation fragment aligned with the part of the transcription currently\nshown. In this case, the properties of the `pb-view` would still point to the transcription, but the function\nidentified by map would return the corresponding fragment from the translation to be processed.\n\nNavigation in the document is still determined by the current root as defined through the `root`, `xpath`\nand `xmlId` properties.",
          "type": "string"
        },
        {
          "name": "column-separator",
          "description": "CSS selector to find column breaks in the content returned\nfrom the server. If this property is set and column breaks\nare found, the component will display two columns side by side.",
          "type": "string"
        },
        {
          "name": "load-css",
          "description": "If set, points to an external stylesheet which should be applied to\nthe text *after* the ODD-generated styles.",
          "type": "string"
        },
        {
          "name": "fix-links",
          "description": "If set, relative links (img, a) will be made absolute.",
          "type": "boolean"
        },
        {
          "name": "use-language",
          "description": "If set, a refresh will be triggered if a `pb-i18n-update` event is received,\ne.g. due to the user selecting a different interface language.",
          "type": "boolean"
        },
        {
          "name": "infinite-scroll",
          "description": "Experimental: if enabled, the view will incrementally load new document fragments if the user tries to scroll\nbeyond the start or end of the visible text. The feature inserts a small blank section at the top\nand bottom. If this section becomes visible, a load operation will be triggered.\n\nNote: only browsers implementing the `IntersectionObserver` API are supported. Also the feature\ndoes not work in two-column mode or with animations.",
          "type": "boolean"
        },
        {
          "name": "src",
          "description": "The id of a `pb-document` element this view should display.\nSettings like `odd` or `view` will be taken from the `pb-document`\nunless overwritten by properties in this component.\n\nThis property is **required** and **must** point to an existing `pb-document` with\nthe given id.\n\nSetting the property after initialization will clear the properties xmlId, nodeId and odd.",
          "type": "string"
        },
        {
          "name": "url",
          "description": "The relative URL to the script on the server which will be called for loading content.",
          "type": "string",
          "default": "\"modules/lib/components.xql\""
        },
        {
          "name": "on-update",
          "description": "If set to true, the component will not load automatically. Instead it will wait until it receives a `pb-update`\nevent. Use this to make one `pb-view` component dependent on another one. Default is 'false'.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "append-footnotes",
          "description": "The server returns footnotes separately. Set this property\nif you wish to append them to the main text.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "not-found",
          "description": "Message to display if no content was returned by the server.\nSet to empty string to show nothing.",
          "type": "string",
          "default": "\"the server did not return any content\""
        },
        {
          "name": "animation",
          "description": "wether to animate the view when new page is loaded. Defaults to 'false' meaning that no\nanimation takes place. If 'true' will apply a translateX transistion in forward/backward direction.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "direction",
          "description": "The reading direction, i.e. 'ltr' or 'rtl'.",
          "type": "\"ltr\"|\"rtl\"",
          "default": "\"ltr\""
        },
        {
          "name": "highlight",
          "description": "Should matches be highlighted if a search has been executed?",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "infinite-scroll-max",
          "description": "Maximum number of fragments to keep in memory if `infinite-scroll`\nis enabled. If the user is scrolling beyond the maximum, fragements\nwill be removed from the DOM before or after the current reading position.\nDefault is 10. Set to zero to allow loading the entire document.",
          "type": "number",
          "default": "10"
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.\n\n`pb-view` by default sets this property to select `pb-toggle-feature` and `pb-select-feature` \nelements.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "odd",
          "attribute": "odd",
          "description": "The ODD to use for rendering the document. Overwrites an ODD defined on\n`pb-document`. The odd should be specified by its name without path\nor the `.odd` suffix.",
          "type": "string"
        },
        {
          "name": "view",
          "attribute": "view",
          "description": "The view type to use for paginating the document. Either `page`, `div` or `single`.\nOverwrites the same property specified on `pb-document`. Values have the following meaning:\n\nValue | Displayed content\n------|------------------\n`page` | content is displayed page by page as determined by tei:pb\n`div` | content is displayed by divisions\n`single` | do not paginate but display entire content at once",
          "type": "string"
        },
        {
          "name": "nodeId",
          "attribute": "node-id",
          "description": "An eXist nodeId. If specified, selects the root of the fragment of the document\nwhich should be displayed. Normally this property is set automatically by pagination.",
          "type": "string"
        },
        {
          "name": "xmlId",
          "attribute": "xml-id",
          "description": "An xml:id to be displayed. If specified, this determines the root of the fragment to be\ndisplayed. Use to directly navigate to a specific section.",
          "type": "array"
        },
        {
          "name": "xpath",
          "attribute": "xpath",
          "description": "An optional XPath expression: the root of the fragment to be processed is determined\nby evaluating the given XPath expression. The XPath expression should be absolute.\nThe namespace of the document is declared as default namespace, so no prefixes should\nbe used.\n\nIf the `map` property is used, it may change scope for the displayed fragment.",
          "type": "string"
        },
        {
          "name": "map",
          "attribute": "map",
          "description": "If defined denotes the local name of an XQuery function in `modules/map.xql`, which will be called\nwith the current root node and should return the node of a mapped fragment. This is helpful if one\nwants, for example, to show a translation fragment aligned with the part of the transcription currently\nshown. In this case, the properties of the `pb-view` would still point to the transcription, but the function\nidentified by map would return the corresponding fragment from the translation to be processed.\n\nNavigation in the document is still determined by the current root as defined through the `root`, `xpath`\nand `xmlId` properties.",
          "type": "string"
        },
        {
          "name": "columnSeparator",
          "attribute": "column-separator",
          "description": "CSS selector to find column breaks in the content returned\nfrom the server. If this property is set and column breaks\nare found, the component will display two columns side by side.",
          "type": "string"
        },
        {
          "name": "loadCss",
          "attribute": "load-css",
          "description": "If set, points to an external stylesheet which should be applied to\nthe text *after* the ODD-generated styles.",
          "type": "string"
        },
        {
          "name": "fixLinks",
          "attribute": "fix-links",
          "description": "If set, relative links (img, a) will be made absolute.",
          "type": "boolean"
        },
        {
          "name": "useLanguage",
          "attribute": "use-language",
          "description": "If set, a refresh will be triggered if a `pb-i18n-update` event is received,\ne.g. due to the user selecting a different interface language.",
          "type": "boolean"
        },
        {
          "name": "infiniteScroll",
          "attribute": "infinite-scroll",
          "description": "Experimental: if enabled, the view will incrementally load new document fragments if the user tries to scroll\nbeyond the start or end of the visible text. The feature inserts a small blank section at the top\nand bottom. If this section becomes visible, a load operation will be triggered.\n\nNote: only browsers implementing the `IntersectionObserver` API are supported. Also the feature\ndoes not work in two-column mode or with animations.",
          "type": "boolean"
        },
        {
          "name": "src",
          "attribute": "src",
          "description": "The id of a `pb-document` element this view should display.\nSettings like `odd` or `view` will be taken from the `pb-document`\nunless overwritten by properties in this component.\n\nThis property is **required** and **must** point to an existing `pb-document` with\nthe given id.\n\nSetting the property after initialization will clear the properties xmlId, nodeId and odd.",
          "type": "string"
        },
        {
          "name": "url",
          "attribute": "url",
          "description": "The relative URL to the script on the server which will be called for loading content.",
          "type": "string",
          "default": "\"modules/lib/components.xql\""
        },
        {
          "name": "onUpdate",
          "attribute": "on-update",
          "description": "If set to true, the component will not load automatically. Instead it will wait until it receives a `pb-update`\nevent. Use this to make one `pb-view` component dependent on another one. Default is 'false'.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "appendFootnotes",
          "attribute": "append-footnotes",
          "description": "The server returns footnotes separately. Set this property\nif you wish to append them to the main text.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "notFound",
          "attribute": "not-found",
          "description": "Message to display if no content was returned by the server.\nSet to empty string to show nothing.",
          "type": "string",
          "default": "\"the server did not return any content\""
        },
        {
          "name": "animation",
          "attribute": "animation",
          "description": "wether to animate the view when new page is loaded. Defaults to 'false' meaning that no\nanimation takes place. If 'true' will apply a translateX transistion in forward/backward direction.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "direction",
          "attribute": "direction",
          "description": "The reading direction, i.e. 'ltr' or 'rtl'.",
          "type": "\"ltr\"|\"rtl\"",
          "default": "\"ltr\""
        },
        {
          "name": "highlight",
          "attribute": "highlight",
          "description": "Should matches be highlighted if a search has been executed?",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "infiniteScrollMax",
          "attribute": "infinite-scroll-max",
          "description": "Maximum number of fragments to keep in memory if `infinite-scroll`\nis enabled. If the user is scrolling beyond the maximum, fragements\nwill be removed from the DOM before or after the current reading position.\nDefault is 10. Set to zero to allow loading the entire document.",
          "type": "number",
          "default": "10"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.\n\n`pb-view` by default sets this property to select `pb-toggle-feature` and `pb-select-feature` \nelements.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-start-update",
          "description": "Fired before the element updates its content"
        },
        {
          "name": "pb-update",
          "description": "Fired when the component received content from the server"
        },
        {
          "name": "pb-end-update",
          "description": "Fired after the element has finished updating its content"
        },
        {
          "name": "pb-navigate",
          "description": "When received, navigate forward or backward in the document"
        },
        {
          "name": "pb-zoom",
          "description": "When received, zoom in or out by changing font size of the content"
        },
        {
          "name": "pb-refresh",
          "description": "When received, refresh the content based on the parameters passed in the event"
        },
        {
          "name": "pb-toggle",
          "description": "When received, toggle content properties"
        }
      ],
      "cssProperties": [
        {
          "name": "--pb-view-column-gap",
          "description": "The gap between columns in two-column mode",
          "default": "\"10px\""
        },
        {
          "name": "--pb-footnote-font-size",
          "description": "Font size for the footnote marker"
        },
        {
          "name": "--pb-footnote-font-family",
          "description": "Font family for the footnote marker"
        },
        {
          "name": "--pb-footnote-color",
          "description": "Text color of footnote marker"
        },
        {
          "name": "--pb-footnote-padding",
          "description": "Padding around a footnote marker"
        }
      ]
    },
    {
      "name": "pb-zoom",
      "path": "./src/pb-zoom.js",
      "description": "Zoom button to enlarge/shrink the font for the views. This component does not\nimplement any functionality itself, but just emits a `pb-zoom` event.",
      "attributes": [
        {
          "name": "icon",
          "description": "The icon to use",
          "type": "string",
          "default": "\"icons:zoom-in\""
        },
        {
          "name": "direction",
          "description": "Either 'in' or 'out'",
          "type": "string",
          "default": "\"in\""
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "icon",
          "attribute": "icon",
          "description": "The icon to use",
          "type": "string",
          "default": "\"icons:zoom-in\""
        },
        {
          "name": "direction",
          "attribute": "direction",
          "description": "Either 'in' or 'out'",
          "type": "string",
          "default": "\"in\""
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-zoom",
          "description": "sends an event for e.g. pb-views to react to"
        }
      ]
    },
    {
      "name": "pb-drawer",
      "path": "./src/pb-drawer.js",
      "description": "A drawer component used e.g. for table-of-contents.",
      "attributes": [
        {
          "name": "toggle",
          "description": "optional id reference to a component that allows opening/closing the drawer.\nIf `maxWidth` is set and the viewport width is larger, the toggle's display\nstyle will be set to 'none'.",
          "type": "string"
        },
        {
          "name": "max-width",
          "description": "Defines a breakpoint width: if the viewport width is below the width given in\nthis property, the drawer is turned into an overlay, which only reveals if the\ntoggle is activated.",
          "type": "string"
        },
        {
          "name": "opened",
          "description": "Boolean reflecting the opened/closed state of the drawer",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "toggle",
          "attribute": "toggle",
          "description": "optional id reference to a component that allows opening/closing the drawer.\nIf `maxWidth` is set and the viewport width is larger, the toggle's display\nstyle will be set to 'none'.",
          "type": "string"
        },
        {
          "name": "maxWidth",
          "attribute": "max-width",
          "description": "Defines a breakpoint width: if the viewport width is below the width given in\nthis property, the drawer is turned into an overlay, which only reveals if the\ntoggle is activated.",
          "type": "string"
        },
        {
          "name": "opened",
          "attribute": "opened",
          "description": "Boolean reflecting the opened/closed state of the drawer",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-load",
          "description": "Fires a load request when opened"
        },
        {
          "name": "pb-refresh",
          "description": "When received, closes the drawer"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "unnamed default slot for the content"
        }
      ]
    },
    {
      "name": "pb-media-query",
      "path": "./src/pb-media-query.js",
      "description": "Show or hide contents depending on a media query. This is used to toggle the menubar and drawer.\nOn small displays, the menu will move into the drawer.",
      "attributes": [
        {
          "name": "query",
          "description": "Media query to be watched by the element.\n\nCan be modified at run time by setting a new value.",
          "type": "string",
          "default": "\"(max-width:460px)\""
        },
        {
          "name": "match",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "query",
          "attribute": "query",
          "description": "Media query to be watched by the element.\n\nCan be modified at run time by setting a new value.",
          "type": "string",
          "default": "\"(max-width:460px)\""
        },
        {
          "name": "match",
          "attribute": "match",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "changed"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "default unnamed slot"
        }
      ]
    },
    {
      "name": "pb-custom-form",
      "path": "./src/pb-custom-form.js",
      "description": "A custom form element which loads the actual form from a server-side script using AJAX.\nEmits a `pb-search-resubmit` event when the form is submitted, signalling `pb-search` that\na search should be redone using the parameters passed.\n\nThe component is currently used to implement the additional search facets on the start page and\nsearch result page.",
      "attributes": [
        {
          "name": "url",
          "description": "The URL for the AJAX request. If a relative URL is passed, it will be resolved\neither against the app root (if known) or the location of the webcomponent.",
          "type": "string"
        },
        {
          "name": "src",
          "description": "ID of the pb-document this element is connected to. The document path to\nload will be taken from the pb-document.",
          "type": "string"
        },
        {
          "name": "container",
          "description": "The container element into which the results returned by\nthe AJAX request will be loaded.",
          "type": "string"
        },
        {
          "name": "fix-links",
          "description": "If set, relative links (img, a) will be made absolute.",
          "type": "boolean"
        },
        {
          "name": "start",
          "description": "Start offset to use for showing paginated content.",
          "type": "number"
        },
        {
          "name": "userParams",
          "type": "object"
        },
        {
          "name": "auto",
          "description": "Should content be loaded immediately when the component is initialized?",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "loadOnce",
          "description": "Only load content once, not every time a `pb-load` event is received.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "history",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "event",
          "type": "string",
          "default": "\"pb-load\""
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "url",
          "attribute": "url",
          "description": "The URL for the AJAX request. If a relative URL is passed, it will be resolved\neither against the app root (if known) or the location of the webcomponent.",
          "type": "string"
        },
        {
          "name": "src",
          "attribute": "src",
          "description": "ID of the pb-document this element is connected to. The document path to\nload will be taken from the pb-document.",
          "type": "string"
        },
        {
          "name": "container",
          "attribute": "container",
          "description": "The container element into which the results returned by\nthe AJAX request will be loaded.",
          "type": "string"
        },
        {
          "name": "fixLinks",
          "attribute": "fix-links",
          "description": "If set, relative links (img, a) will be made absolute.",
          "type": "boolean"
        },
        {
          "name": "start",
          "attribute": "start",
          "description": "Start offset to use for showing paginated content.",
          "type": "number"
        },
        {
          "name": "userParams",
          "attribute": "userParams",
          "type": "object"
        },
        {
          "name": "auto",
          "attribute": "auto",
          "description": "Should content be loaded immediately when the component is initialized?",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "loadOnce",
          "attribute": "loadOnce",
          "description": "Only load content once, not every time a `pb-load` event is received.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "history",
          "attribute": "history",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "event",
          "attribute": "event",
          "type": "string",
          "default": "\"pb-load\""
        },
        {
          "name": "loaded",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-custom-form-loaded"
        },
        {
          "name": "pb-start-update",
          "description": "Fired before the element updates its content"
        },
        {
          "name": "pb-end-update",
          "description": "Fired after the element has finished updating its content"
        },
        {
          "name": "pb-results-received",
          "description": "Fired when the component received content from the server"
        },
        {
          "name": "pb-toggle",
          "description": "When received, changes the state of the feature"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "default unnamed slot for content"
        }
      ]
    },
    {
      "name": "pb-download",
      "path": "./src/pb-download.js",
      "description": "Generate a link to download a resource. Optionally shows a dialog during the download.\nThis component is mainly used for creating the links for downloading PDFs, epubs etc.",
      "attributes": [
        {
          "name": "src",
          "description": "optional id reference to a pb-document. If present the pb-download will allow to download the\nreferenced pb-document.",
          "type": "string"
        },
        {
          "name": "url",
          "description": "the base URL to construct the link from. If not specified, the path to the document will be used.",
          "type": "string"
        },
        {
          "name": "type",
          "description": "optional suffix to append to the constructed URL. Use for getting a PDF, epub or similar.",
          "type": "string"
        },
        {
          "name": "odd",
          "description": "extra odd parameter to be added. This will correspond to the ODD used by the document, if given.",
          "type": "string"
        },
        {
          "name": "dialog",
          "description": "id of dialog component to show when downloading. A paper-dialog component with this id must\nexist.",
          "type": "string"
        },
        {
          "name": "title",
          "description": "title to show in the dialog while download is in progress",
          "type": "string"
        },
        {
          "name": "params",
          "description": "extra params to be added",
          "type": "string"
        },
        {
          "name": "source",
          "description": "add a special parameter 'source=yes' if true. For PDF this will result\nin generated source code to be displayed",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "full",
          "description": "If true, an absolute URL will be constructed using the endpoint defined by `pb-page`.\nOtherwise only the file name of the document is used as relative URL.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "src",
          "attribute": "src",
          "description": "optional id reference to a pb-document. If present the pb-download will allow to download the\nreferenced pb-document.",
          "type": "string"
        },
        {
          "name": "url",
          "attribute": "url",
          "description": "the base URL to construct the link from. If not specified, the path to the document will be used.",
          "type": "string"
        },
        {
          "name": "type",
          "attribute": "type",
          "description": "optional suffix to append to the constructed URL. Use for getting a PDF, epub or similar.",
          "type": "string"
        },
        {
          "name": "odd",
          "attribute": "odd",
          "description": "extra odd parameter to be added. This will correspond to the ODD used by the document, if given.",
          "type": "string"
        },
        {
          "name": "dialog",
          "attribute": "dialog",
          "description": "id of dialog component to show when downloading. A paper-dialog component with this id must\nexist.",
          "type": "string"
        },
        {
          "name": "title",
          "attribute": "title",
          "description": "title to show in the dialog while download is in progress",
          "type": "string"
        },
        {
          "name": "params",
          "attribute": "params",
          "description": "extra params to be added",
          "type": "string"
        },
        {
          "name": "source",
          "attribute": "source",
          "description": "add a special parameter 'source=yes' if true. For PDF this will result\nin generated source code to be displayed",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "full",
          "attribute": "full",
          "description": "If true, an absolute URL will be constructed using the endpoint defined by `pb-page`.\nOtherwise only the file name of the document is used as relative URL.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-document",
          "description": "When received, updates the odd to the one passed from the event"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "unnamed default slot for link text"
        }
      ]
    },
    {
      "name": "pb-login",
      "path": "./src/pb-login.js",
      "description": "Handles login/logout. Shows a link which opens a login dialog if clicked.\nIf a user is logged in, clicking the link will log him out instead.",
      "attributes": [
        {
          "name": "password",
          "type": "string"
        },
        {
          "name": "group",
          "description": "If set, only users being members of the specified group are\nallowed to log in.",
          "type": "string"
        },
        {
          "name": "auto",
          "description": "If set to true, automatically show login dialog if user is not logged in",
          "type": "boolean"
        },
        {
          "name": "logged-in",
          "description": "True if user is currently logged in",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "login-label",
          "description": "Label to show if not logged in",
          "type": "string",
          "default": "\"login.login\""
        },
        {
          "name": "logout-label",
          "description": "Label to show before user name if logged in",
          "type": "string",
          "default": "\"login.as\""
        },
        {
          "name": "user",
          "description": "The currently logged in user.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "groups",
          "description": "Array of groups the current user is a member of.",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "login-icon",
          "type": "string",
          "default": "\"account-circle\""
        },
        {
          "name": "logout-icon",
          "type": "string",
          "default": "\"supervisor-account\""
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "password",
          "attribute": "password",
          "type": "string"
        },
        {
          "name": "group",
          "attribute": "group",
          "description": "If set, only users being members of the specified group are\nallowed to log in.",
          "type": "string"
        },
        {
          "name": "auto",
          "attribute": "auto",
          "description": "If set to true, automatically show login dialog if user is not logged in",
          "type": "boolean"
        },
        {
          "name": "loggedIn",
          "attribute": "logged-in",
          "description": "True if user is currently logged in",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "loginLabel",
          "attribute": "login-label",
          "description": "Label to show if not logged in",
          "type": "string",
          "default": "\"login.login\""
        },
        {
          "name": "logoutLabel",
          "attribute": "logout-label",
          "description": "Label to show before user name if logged in",
          "type": "string",
          "default": "\"login.as\""
        },
        {
          "name": "user",
          "attribute": "user",
          "description": "The currently logged in user.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "groups",
          "attribute": "groups",
          "description": "Array of groups the current user is a member of.",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "loginIcon",
          "attribute": "login-icon",
          "type": "string",
          "default": "\"account-circle\""
        },
        {
          "name": "logoutIcon",
          "attribute": "logout-icon",
          "type": "string",
          "default": "\"supervisor-account\""
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-login",
          "description": "Sends results of checking user credentials"
        }
      ]
    },
    {
      "name": "pb-lang",
      "path": "./src/pb-lang.js",
      "description": "A dropdown for switching the interface language.",
      "attributes": [
        {
          "name": "selected",
          "type": "string"
        },
        {
          "name": "label",
          "description": "The label for a language in the dropdown",
          "type": "string",
          "default": "\"language\""
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "selected",
          "attribute": "selected",
          "type": "string"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "The label for a language in the dropdown",
          "type": "string",
          "default": "\"language\""
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-i18n-language",
          "description": "Sends selected language"
        },
        {
          "name": "pb-i18n-update",
          "description": "When received, sets the selected language to the one received from the event"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "unnamed default slot for dropdown menu options"
        }
      ]
    },
    {
      "name": "pb-tabs",
      "path": "./src/pb-tabs.js",
      "description": "Combines a row of tabs with associated content.",
      "attributes": [
        {
          "name": "selected",
          "type": "number",
          "default": "\"_initial\""
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "selected",
          "attribute": "selected",
          "type": "number",
          "default": "\"_initial\""
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "slots": [
        {
          "name": "tab",
          "description": "tab area"
        },
        {
          "name": "page",
          "description": "page area"
        }
      ]
    },
    {
      "name": "pb-panel",
      "path": "./src/pb-panel.js",
      "description": "A container for different views. Only one view will be shown at a time.\nProvides a dropdown for the user to switch between views. Views are\nlazy loaded and should be provided as one or more `<template>` elements.\nEach `<template>` may have a title attribute to specify the title to be shown\nfor it in the dropdown.\n\n## CSS Variables\n\n| Custom property | Description | Default|\n| ----------------|-------------|--------|\n|--pb-panel-max-height | The max height of the panel content. Set to enable scrolling. | undefined |",
      "attributes": [
        {
          "name": "active",
          "description": "the index of the active view",
          "type": "number",
          "default": "0"
        },
        {
          "name": "label",
          "description": "the label displayed above the dropdown for selecting the view to show",
          "type": "string",
          "default": "\"View\""
        },
        {
          "name": "panels",
          "description": "a name for each available panel, to be displayed in the dropdown. If not set,\neach template will be checked for a title attribute, which will be taken as name.",
          "type": "array"
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "active",
          "attribute": "active",
          "description": "the index of the active view",
          "type": "number",
          "default": "0"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "the label displayed above the dropdown for selecting the view to show",
          "type": "string",
          "default": "\"View\""
        },
        {
          "name": "panels",
          "attribute": "panels",
          "description": "a name for each available panel, to be displayed in the dropdown. If not set,\neach template will be checked for a title attribute, which will be taken as name.",
          "type": "array"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-panel",
          "description": "Fired whenever the component switches to a different content panel. Used by `pb-grid` to update its state."
        },
        {
          "name": "pb-refresh",
          "description": "Fired after a new content panel is shown to allow connected components to refresh."
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "unnamed default slot for content"
        },
        {
          "name": "toolbar",
          "description": "toolbar area"
        }
      ]
    },
    {
      "name": "pb-grid",
      "path": "./src/pb-grid.js",
      "description": "A component to create a column layout based upon CSS grid. It offers methods for dynamically changing\nthe layout by adding or removing panels at runtime.",
      "attributes": [
        {
          "name": "panels",
          "description": "an array of panel items to display when the component is loaded. It should contain a\nnumber for each panel to show, indicating the ordinal position of the template within the `<pb-panel>`\nto initialize. For example, if you have two templates in `<pb-panel>`: \"transcription\" and \"translation\",\nsetting `panels=\"[0, 1]\"` will show two columns, one with the transcription, the other with the translation.\n\nPassing in a browser parameter `panels` with a comma-separated list will set this property as well.",
          "type": "array"
        },
        {
          "name": "direction",
          "type": "string",
          "default": "\"ltr\""
        },
        {
          "name": "animated",
          "description": "CSS Selektor to choose elements to animate. If not specified all 'pb-view' elements will be animated by default.",
          "type": "string",
          "default": "\"pb-view\""
        },
        {
          "name": "animation",
          "description": "wether to animate the view when new page is loaded. Defaults to 'false' meaning that no\nanimation takes place.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "panels",
          "attribute": "panels",
          "description": "an array of panel items to display when the component is loaded. It should contain a\nnumber for each panel to show, indicating the ordinal position of the template within the `<pb-panel>`\nto initialize. For example, if you have two templates in `<pb-panel>`: \"transcription\" and \"translation\",\nsetting `panels=\"[0, 1]\"` will show two columns, one with the transcription, the other with the translation.\n\nPassing in a browser parameter `panels` with a comma-separated list will set this property as well.",
          "type": "array"
        },
        {
          "name": "direction",
          "attribute": "direction",
          "type": "string",
          "default": "\"ltr\""
        },
        {
          "name": "animated",
          "attribute": "animated",
          "description": "CSS Selektor to choose elements to animate. If not specified all 'pb-view' elements will be animated by default.",
          "type": "string",
          "default": "\"pb-view\""
        },
        {
          "name": "animation",
          "attribute": "animation",
          "description": "wether to animate the view when new page is loaded. Defaults to 'false' meaning that no\nanimation takes place.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-refresh",
          "description": "Fired after a new column has been added to allow connected components to refresh."
        },
        {
          "name": "pb-panel",
          "description": "When received, updates the list of panels to show"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "default unnamed slot for the panel"
        }
      ]
    },
    {
      "name": "pb-grid-action",
      "path": "./src/pb-grid-action.js",
      "description": "an action component to execute an 'add panel' or 'remove panel' action on a pb-grid.",
      "attributes": [
        {
          "name": "grid",
          "description": "reference to a pb-grid element",
          "type": "string"
        },
        {
          "name": "action",
          "description": "the type of action. Can be either `add` or `remove`\n\nDefaults to `add`",
          "type": "string",
          "default": "\"add\""
        },
        {
          "name": "initial",
          "type": "number",
          "default": "0"
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "grid",
          "attribute": "grid",
          "description": "reference to a pb-grid element",
          "type": "string"
        },
        {
          "name": "action",
          "attribute": "action",
          "description": "the type of action. Can be either `add` or `remove`\n\nDefaults to `add`",
          "type": "string",
          "default": "\"add\""
        },
        {
          "name": "initial",
          "attribute": "initial",
          "type": "number",
          "default": "0"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "default unnamed slot for content"
        }
      ]
    },
    {
      "name": "pb-restricted",
      "path": "./src/pb-restricted.js",
      "description": "Show content if the user is logged in. Optionally requires the user\nto be member of a specific group. Listens for the `pb-login` event\ntriggered by `pb-login` to be notified of user changes.",
      "attributes": [
        {
          "name": "login",
          "description": "Id of the pb-login element to connect to",
          "type": "string"
        },
        {
          "name": "group",
          "description": "If set, requires the logged in user to be member of\nthe given group.",
          "type": "string"
        },
        {
          "name": "show",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "login",
          "attribute": "login",
          "description": "Id of the pb-login element to connect to",
          "type": "string"
        },
        {
          "name": "group",
          "attribute": "group",
          "description": "If set, requires the logged in user to be member of\nthe given group.",
          "type": "string"
        },
        {
          "name": "show",
          "attribute": "show",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-login",
          "description": "When received, changes the state of the component according to the user info received"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "unnamed default slot"
        }
      ]
    },
    {
      "name": "pb-edit-xml",
      "path": "./src/pb-edit-xml.js",
      "description": "Open eXide to edit a given source document.",
      "attributes": [
        {
          "name": "path",
          "description": "expects a context-absolute path to the document to edit e.g. '/db/apps/tei-publisher/mytext.xml'",
          "type": "string"
        },
        {
          "name": "src",
          "description": "optional id reference to a pb-document",
          "type": "string"
        },
        {
          "name": "title",
          "description": "HTML title to be used",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "path",
          "attribute": "path",
          "description": "expects a context-absolute path to the document to edit e.g. '/db/apps/tei-publisher/mytext.xml'",
          "type": "string"
        },
        {
          "name": "src",
          "attribute": "src",
          "description": "optional id reference to a pb-document",
          "type": "string"
        },
        {
          "name": "title",
          "attribute": "title",
          "description": "HTML title to be used",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "unnamed default slot for the link text"
        }
      ]
    },
    {
      "name": "pb-manage-odds",
      "path": "./src/pb-manage-odds.js",
      "description": "High-level component implementing the ODD management panel\non the start page.",
      "attributes": [
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "odds",
          "description": "array of ODD-files to be listed",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "target",
          "attribute": "target",
          "type": "string"
        },
        {
          "name": "odds",
          "attribute": "odds",
          "description": "array of ODD-files to be listed",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-start-update",
          "description": "Fired before the element updates its content"
        },
        {
          "name": "pb-end-update",
          "description": "Fired after the element has finished updating its content"
        },
        {
          "name": "pb-load",
          "description": "Sending the ODD to be used"
        }
      ]
    },
    {
      "name": "pb-upload",
      "path": "./src/pb-upload.js",
      "description": "Component for uploading resources to TEI Publisher or a generated app.",
      "attributes": [
        {
          "name": "target",
          "description": "the server-side script to handle the upload",
          "type": "string"
        },
        {
          "name": "accept",
          "description": "a comma-separated list of file suffixes to accept for upload\n(by default: .xml,.tei,.odd,.docx)",
          "type": "string"
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "target",
          "attribute": "target",
          "description": "the server-side script to handle the upload",
          "type": "string"
        },
        {
          "name": "accept",
          "attribute": "accept",
          "description": "a comma-separated list of file suffixes to accept for upload\n(by default: .xml,.tei,.odd,.docx)",
          "type": "string"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-start-update",
          "description": "Fired before the element updates its content"
        },
        {
          "name": "pb-end-update",
          "description": "Fired after the element has finished updating its content"
        },
        {
          "name": "pb-load",
          "description": "Fired after the upload has completed"
        },
        {
          "name": "pb-collection",
          "description": "when received, sets the upload collection to the one passed from the event"
        }
      ]
    },
    {
      "name": "pb-select-odd",
      "path": "./src/pb-select-odd.js",
      "description": "`pb-select-odd`: Switch between available ODDs.\nIt loads the list of ODDs from `components-odd.xql`.\nEmits a `pb-refresh` event to subscribed views.",
      "attributes": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "odd",
          "description": "Currently selected ODD. If this property is set, the component\nwill immediately load the list of ODDs from the server and select\nthe given ODD.",
          "type": "string"
        },
        {
          "name": "label",
          "description": "The label to show on top of the dropdown menu",
          "type": "string",
          "default": "\"document.selectODD\""
        },
        {
          "name": "odds",
          "description": "The ODDs to show.",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "name",
          "attribute": "name",
          "type": "string"
        },
        {
          "name": "odd",
          "attribute": "odd",
          "description": "Currently selected ODD. If this property is set, the component\nwill immediately load the list of ODDs from the server and select\nthe given ODD.",
          "type": "string"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "The label to show on top of the dropdown menu",
          "type": "string",
          "default": "\"document.selectODD\""
        },
        {
          "name": "odds",
          "attribute": "odds",
          "description": "The ODDs to show.",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-refresh",
          "description": "Fires a refresh event to subscribed views after a different ODD has been selected for display."
        },
        {
          "name": "pb-update",
          "description": "When received, resets the ODD selected to the one passed in the event"
        }
      ]
    },
    {
      "name": "pb-select-template",
      "path": "./src/pb-select-template.js",
      "description": "`pb-select-template`: Switch between available page templates.\nIt loads the list of templates from `components-list-templates.xql`.\nEmits a page reload on selection.",
      "attributes": [
        {
          "name": "template",
          "description": "Currently selected ODD. If this property is set, the component\nwill immediately load the list of ODDs from the server and select\nthe given ODD.",
          "type": "string"
        },
        {
          "name": "label",
          "description": "The label to show on top of the dropdown menu",
          "type": "string",
          "default": "\"document.selectTemplate\""
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "template",
          "attribute": "template",
          "description": "Currently selected ODD. If this property is set, the component\nwill immediately load the list of ODDs from the server and select\nthe given ODD.",
          "type": "string"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "The label to show on top of the dropdown menu",
          "type": "string",
          "default": "\"document.selectTemplate\""
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ]
    },
    {
      "name": "pb-geolocation",
      "path": "./src/pb-geolocation.js",
      "description": "Represents a geo location. Extends `pb-highlight`, but sends an additional `pb-geolocation` event\non mouseover.",
      "attributes": [
        {
          "name": "longitude",
          "type": "number"
        },
        {
          "name": "latitude",
          "type": "number"
        },
        {
          "name": "label",
          "description": "Optional label for the place, e.g. to display a marker",
          "type": "string"
        },
        {
          "name": "key",
          "description": "The key to which this element is connected.",
          "type": "string"
        },
        {
          "name": "duration",
          "description": "If set to > 0, specifies a duration (in ms) after which\nthe highlighting will be removed again",
          "type": "number",
          "default": "0"
        },
        {
          "name": "scroll",
          "description": "Scroll this element into view when it receives a highlight event",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "highlight-self",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "longitude",
          "attribute": "longitude",
          "type": "number"
        },
        {
          "name": "latitude",
          "attribute": "latitude",
          "type": "number"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "Optional label for the place, e.g. to display a marker",
          "type": "string"
        },
        {
          "name": "key",
          "attribute": "key",
          "description": "The key to which this element is connected.",
          "type": "string"
        },
        {
          "name": "duration",
          "attribute": "duration",
          "description": "If set to > 0, specifies a duration (in ms) after which\nthe highlighting will be removed again",
          "type": "number",
          "default": "0"
        },
        {
          "name": "scroll",
          "attribute": "scroll",
          "description": "Scroll this element into view when it receives a highlight event",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "highlightSelf",
          "attribute": "highlight-self",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-geolocation",
          "description": "Sends geocoordinates"
        },
        {
          "name": "pb-highlight-off",
          "description": "Fires removal of all highlights that might have existed before"
        },
        {
          "name": "pb-highlight-on",
          "description": "Fires highlight event with a key passed to which other pb-highlight elements with the same key will react"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "default unnamed slot for content"
        }
      ]
    },
    {
      "name": "pb-repeat",
      "path": "./src/pb-repeat.js",
      "description": "Simple component to create repeatable form elements. It expects\nan HTML template containing arbitrary HTML. For every repeated instance,\nthe template will be copied. All elements with a `name` attribute within the\ncopied template will be renamed to have an `[idx]` suffix denoting their position\nwithin the instance list.\n\nThe element stamps the instances into light DOM, so a form wrapping around it will see\nthe form controls. One can therefore use a normal form submit.",
      "attributes": [
        {
          "name": "initial",
          "description": "The initial number of (empty) instances to be shown\n(1 by default).",
          "type": "number",
          "default": "1"
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "initial",
          "attribute": "initial",
          "description": "The initial number of (empty) instances to be shown\n(1 by default).",
          "type": "number",
          "default": "1"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ]
    },
    {
      "name": "pb-svg",
      "path": "./src/pb-svg.js",
      "description": "Show an SVG image with zoom and pan functionality. The image URL may\neither be specified via the `url` property or an `pb-show-annotation` event\nsent to this component.",
      "attributes": [
        {
          "name": "url",
          "type": "string"
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "url",
          "attribute": "url",
          "type": "string"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-show-annotation",
          "description": "When received, loads the image from the URL passed from the event"
        }
      ]
    },
    {
      "name": "pb-facsimile",
      "path": "./src/pb-facsimile.js",
      "description": "View zoomable images using a IIIF server.",
      "attributes": [
        {
          "name": "show-navigator",
          "type": "boolean"
        },
        {
          "name": "showFullPageControl",
          "description": "If true then the 'Toggle full page' button is displayed to switch between full page and normal mode.",
          "type": "boolean"
        },
        {
          "name": "showRotationControl",
          "description": "If true then the rotate left/right controls will be displayed\nas part of the standard controls. This is also subject to the\nbrowser support for rotate (e.g. viewer.drawer.canRotate()).",
          "type": "boolean"
        },
        {
          "name": "constrainDuringPan",
          "type": "boolean"
        },
        {
          "name": "facsimiles",
          "description": "Array of facsimiles",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "base-uri",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "type",
          "description": "Type of the source of the image to display: either 'iiif' or 'image'\n(for simple image links not served via IIIF).",
          "type": "string",
          "default": "\"iiif\""
        },
        {
          "name": "visibilityRatio",
          "description": "The percentage ( as a number from 0 to 1 ) of the source image\nwhich must be kept within the viewport.\nIf the image is dragged beyond that limit, it will 'bounce'\nback until the minimum visibility ratio is achieved.\nSetting this to 0 and wrapHorizontal ( or wrapVertical )\nto true will provide the effect of an infinitely scrolling viewport.",
          "type": "number",
          "default": "1"
        },
        {
          "name": "default-zoom-level",
          "description": "Default zoom between: set to 0 to adjust to viewer size.",
          "type": "number",
          "default": "0"
        },
        {
          "name": "showHomeControl",
          "description": "If true then the 'Go home' button is displayed to go back to the original zoom and pan.",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "show-navigation-control",
          "description": "Set to false to prevent the appearance of the default navigation controls.\nNote that if set to false, the customs buttons set by the options\nzoomInButton, zoomOutButton etc, are rendered inactive.",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "src",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "prefix-url",
          "description": "Path pointing to the location of openseadragon user interface images.",
          "type": "string",
          "default": "\"../images/openseadragon/\""
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "showNavigator",
          "attribute": "show-navigator",
          "type": "boolean"
        },
        {
          "name": "showFullPageControl",
          "attribute": "showFullPageControl",
          "description": "If true then the 'Toggle full page' button is displayed to switch between full page and normal mode.",
          "type": "boolean"
        },
        {
          "name": "showRotationControl",
          "attribute": "showRotationControl",
          "description": "If true then the rotate left/right controls will be displayed\nas part of the standard controls. This is also subject to the\nbrowser support for rotate (e.g. viewer.drawer.canRotate()).",
          "type": "boolean"
        },
        {
          "name": "constrainDuringPan",
          "attribute": "constrainDuringPan",
          "type": "boolean"
        },
        {
          "name": "facsimiles",
          "attribute": "facsimiles",
          "description": "Array of facsimiles",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "baseUri",
          "attribute": "base-uri",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "type",
          "attribute": "type",
          "description": "Type of the source of the image to display: either 'iiif' or 'image'\n(for simple image links not served via IIIF).",
          "type": "string",
          "default": "\"iiif\""
        },
        {
          "name": "visibilityRatio",
          "attribute": "visibilityRatio",
          "description": "The percentage ( as a number from 0 to 1 ) of the source image\nwhich must be kept within the viewport.\nIf the image is dragged beyond that limit, it will 'bounce'\nback until the minimum visibility ratio is achieved.\nSetting this to 0 and wrapHorizontal ( or wrapVertical )\nto true will provide the effect of an infinitely scrolling viewport.",
          "type": "number",
          "default": "1"
        },
        {
          "name": "defaultZoomLevel",
          "attribute": "default-zoom-level",
          "description": "Default zoom between: set to 0 to adjust to viewer size.",
          "type": "number",
          "default": "0"
        },
        {
          "name": "showHomeControl",
          "attribute": "showHomeControl",
          "description": "If true then the 'Go home' button is displayed to go back to the original zoom and pan.",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "showNavigationControl",
          "attribute": "show-navigation-control",
          "description": "Set to false to prevent the appearance of the default navigation controls.\nNote that if set to false, the customs buttons set by the options\nzoomInButton, zoomOutButton etc, are rendered inactive.",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "src",
          "attribute": "src",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "prefixUrl",
          "attribute": "prefix-url",
          "description": "Path pointing to the location of openseadragon user interface images.",
          "type": "string",
          "default": "\"../images/openseadragon/\""
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-start-update",
          "description": "When received, resets the facsimile viewer"
        },
        {
          "name": "pb-update",
          "description": "Checks the contents received for pb-facs-links"
        },
        {
          "name": "pb-show-annotation",
          "description": "When received, sets up the viewer to select a particular image and highlight coordinates"
        }
      ]
    },
    {
      "name": "pb-markdown",
      "path": "./src/pb-markdown.js",
      "description": "A component to render markdown. Content to render may either\n\n1. be specified via the `content` property\n2. included in the body of the element\n3. loaded from an external URL\n\nUsing option 2, if the markdown includes embedded HTML, make sure to wrap\nthe content into an `template` HTML element to prevent the browser from interpreting\nit.\n\nUsing option 3, you can either specify an absolute or relative URL. Relative URLs\nwill be interpreted relative to the endpoint set by `pb-page`.",
      "attributes": [
        {
          "name": "content",
          "description": "The markdown content to be rendered. If undefined,\nmarkdown will be taken from the content of the element \nor loaded from the specified URL.",
          "type": "string"
        },
        {
          "name": "url",
          "description": "An absolute or relative URL to load the markdown from.",
          "type": "string"
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "content",
          "attribute": "content",
          "description": "The markdown content to be rendered. If undefined,\nmarkdown will be taken from the content of the element \nor loaded from the specified URL.",
          "type": "string"
        },
        {
          "name": "url",
          "attribute": "url",
          "description": "An absolute or relative URL to load the markdown from.",
          "type": "string"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ]
    },
    {
      "name": "pb-observable",
      "path": "./src/pb-observable.js",
      "description": "An observable element, which will emit a signal `pb-visible` whenever\nit becomes visible on the viewport. Use it to determine the current position\nwithin a scrollable area.",
      "attributes": [
        {
          "name": "data",
          "description": "Payload data to be passed with the event",
          "type": "string"
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "data",
          "attribute": "data",
          "description": "Payload data to be passed with the event",
          "type": "string"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-visible",
          "description": "fired when the element becomes visible on the viewport"
        }
      ]
    },
    {
      "name": "pb-leaflet-map",
      "path": "./src/pb-leaflet-map.js",
      "description": "A wrapper component for [leaflet](https://leafletjs.com/) displaying a map.",
      "attributes": [
        {
          "name": "latitude",
          "type": "number",
          "default": "51.505"
        },
        {
          "name": "longitude",
          "type": "number",
          "default": "-0.09"
        },
        {
          "name": "zoom",
          "type": "number",
          "default": "15"
        },
        {
          "name": "crs",
          "type": "string",
          "default": "\"EPSG3857\""
        },
        {
          "name": "access-token",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "images-path",
          "type": "string",
          "default": "\"../images/leaflet/\""
        },
        {
          "name": "css-path",
          "type": "string",
          "default": "\"../css/leaflet/\""
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "latitude",
          "attribute": "latitude",
          "type": "number",
          "default": "51.505"
        },
        {
          "name": "longitude",
          "attribute": "longitude",
          "type": "number",
          "default": "-0.09"
        },
        {
          "name": "zoom",
          "attribute": "zoom",
          "type": "number",
          "default": "15"
        },
        {
          "name": "crs",
          "attribute": "crs",
          "type": "string",
          "default": "\"EPSG3857\""
        },
        {
          "name": "accessToken",
          "attribute": "access-token",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "imagesPath",
          "attribute": "images-path",
          "type": "string",
          "default": "\"../images/leaflet/\""
        },
        {
          "name": "cssPath",
          "attribute": "css-path",
          "type": "string",
          "default": "\"../css/leaflet/\""
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-leaflet-marker-click",
          "description": "Fires event to be processed by the map upon click"
        },
        {
          "name": "pb-update-map",
          "description": "When received, redraws the map to fit markers passed in with the event"
        },
        {
          "name": "pb-update",
          "description": "When received, redraws the map to show markers for all pb-geolocation elements"
        },
        {
          "name": "pb-geolocation",
          "description": "When received, focuses the map on the geocoordinates passed in with the event"
        }
      ]
    },
    {
      "name": "pb-message",
      "path": "./src/pb-message.js",
      "description": "Show a dialog with buttons. Used by editor.\n\n\ntodo:confirmation is only partly implemented needs some method to detect which button was clicked",
      "attributes": [
        {
          "name": "title",
          "description": "the dialog box title",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "message",
          "description": "main message text to be shown on dialog.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "type",
          "description": "type of message. Can be either 'message' or 'confirm'. In case of confirm the buttons 'yes' and 'no'\nwill be shown and the dialog becomes modal.",
          "type": "string",
          "default": "\"message\""
        }
      ],
      "properties": [
        {
          "name": "title",
          "attribute": "title",
          "description": "the dialog box title",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "message",
          "attribute": "message",
          "description": "main message text to be shown on dialog.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "type",
          "attribute": "type",
          "description": "type of message. Can be either 'message' or 'confirm'. In case of confirm the buttons 'yes' and 'no'\nwill be shown and the dialog becomes modal.",
          "type": "string",
          "default": "\"message\""
        }
      ]
    },
    {
      "name": "pb-odd-rendition-editor",
      "path": "./src/pb-odd-rendition-editor.js",
      "description": "represents an odd parameter element for editing",
      "attributes": [
        {
          "name": "scopes",
          "type": "array",
          "default": "[\"\",\"before\",\"after\"]"
        },
        {
          "name": "css",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "scope",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "selected",
          "type": "string",
          "default": "\"\""
        }
      ],
      "properties": [
        {
          "name": "scopes",
          "attribute": "scopes",
          "type": "array",
          "default": "[\"\",\"before\",\"after\"]"
        },
        {
          "name": "css",
          "attribute": "css",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "scope",
          "attribute": "scope",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "selected",
          "attribute": "selected",
          "type": "string",
          "default": "\"\""
        }
      ],
      "events": [
        {
          "name": "rendition-connected"
        },
        {
          "name": "remove-rendition"
        },
        {
          "name": "rendition-changed"
        }
      ]
    },
    {
      "name": "pb-odd-parameter-editor",
      "path": "./src/pb-odd-parameter-editor.js",
      "description": "represents an odd parameter element for editing",
      "attributes": [
        {
          "name": "name",
          "description": "the parameter name",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "value",
          "description": "the parameter value",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "behaviour",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "parameters",
          "type": "object",
          "default": "{\"''\":[],\"alternate\":[\"default\",\"alternate\",\"persistent\"],\"anchor\":[\"content\",\"id\"],\"block\":[\"content\"],\"body\":[\"content\"],\"break\":[\"content\",\"type\",\"label\"],\"cell\":[\"content\"],\"cit\":[\"content\",\"source\"],\"document\":[\"content\"],\"figure\":[\"content\",\"title\"],\"graphic\":[\"content\",\"url\",\"width\",\"height\",\"scale\",\"title\"],\"heading\":[\"content\",\"level\"],\"inline\":[\"content\"],\"link\":[\"content\",\"uri\",\"target\"],\"list\":[\"content\",\"type\"],\"listItem\":[\"content\",\"n\"],\"metadata\":[\"content\"],\"note\":[\"content\",\"place\",\"label\"],\"omit\":[],\"paragraph\":[\"content\"],\"row\":[\"content\"],\"section\":[\"content\"],\"table\":[\"content\"],\"text\":[\"content\"],\"title\":[\"content\"],\"webcomponent\":[\"content\",\"name\"]}"
        },
        {
          "name": "endpoint",
          "type": "string",
          "default": "\"\""
        }
      ],
      "properties": [
        {
          "name": "name",
          "attribute": "name",
          "description": "the parameter name",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "the parameter value",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "behaviour",
          "attribute": "behaviour",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "currentParameters",
          "type": "never[]",
          "default": "[]"
        },
        {
          "name": "parameters",
          "attribute": "parameters",
          "type": "object",
          "default": "{\"''\":[],\"alternate\":[\"default\",\"alternate\",\"persistent\"],\"anchor\":[\"content\",\"id\"],\"block\":[\"content\"],\"body\":[\"content\"],\"break\":[\"content\",\"type\",\"label\"],\"cell\":[\"content\"],\"cit\":[\"content\",\"source\"],\"document\":[\"content\"],\"figure\":[\"content\",\"title\"],\"graphic\":[\"content\",\"url\",\"width\",\"height\",\"scale\",\"title\"],\"heading\":[\"content\",\"level\"],\"inline\":[\"content\"],\"link\":[\"content\",\"uri\",\"target\"],\"list\":[\"content\",\"type\"],\"listItem\":[\"content\",\"n\"],\"metadata\":[\"content\"],\"note\":[\"content\",\"place\",\"label\"],\"omit\":[],\"paragraph\":[\"content\"],\"row\":[\"content\"],\"section\":[\"content\"],\"table\":[\"content\"],\"text\":[\"content\"],\"title\":[\"content\"],\"webcomponent\":[\"content\",\"name\"]}"
        },
        {
          "name": "selected",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "endpoint",
          "attribute": "endpoint",
          "type": "string",
          "default": "\"\""
        }
      ],
      "events": [
        {
          "name": "parameter-connected"
        },
        {
          "name": "parameter-remove"
        },
        {
          "name": "parameter-changed"
        }
      ]
    },
    {
      "name": "pb-odd-model-editor",
      "path": "./src/pb-odd-model-editor.js",
      "description": "represents an odd model element for editing",
      "attributes": [
        {
          "name": "models",
          "type": "array"
        },
        {
          "name": "open",
          "type": "string"
        },
        {
          "name": "endpoint",
          "type": "string"
        },
        {
          "name": "behaviour",
          "description": "maps to ODD ´model` behaviour attribute",
          "type": "string",
          "default": "\"inline\""
        },
        {
          "name": "predicate",
          "description": "maps to ODD `model` predicate",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "type",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "template",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "output",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "css",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "model",
          "type": "object",
          "default": "{}"
        },
        {
          "name": "parameters",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "renditions",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "desc",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "sourcerend",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "show",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "outputs",
          "type": "array",
          "default": "[\"\",\"web\",\"print\",\"epub\",\"fo\",\"latex\",\"plain\"]"
        },
        {
          "name": "behaviours",
          "type": "array",
          "default": "[\"alternate\",\"anchor\",\"block\",\"body\",\"break\",\"cell\",\"cit\",\"document\",\"figure\",\"graphic\",\"heading\",\"inline\",\"link\",\"list\",\"listItem\",\"metadata\",\"note\",\"omit\",\"paragraph\",\"row\",\"section\",\"table\",\"text\",\"title\",\"webcomponent\"]"
        },
        {
          "name": "icon",
          "type": "string",
          "default": "\"expand-more\""
        },
        {
          "name": "has-custom-behaviour",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "models",
          "attribute": "models",
          "type": "array"
        },
        {
          "name": "open",
          "attribute": "open",
          "type": "string"
        },
        {
          "name": "endpoint",
          "attribute": "endpoint",
          "type": "string"
        },
        {
          "name": "behaviour",
          "attribute": "behaviour",
          "description": "maps to ODD ´model` behaviour attribute",
          "type": "string",
          "default": "\"inline\""
        },
        {
          "name": "predicate",
          "attribute": "predicate",
          "description": "maps to ODD `model` predicate",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "type",
          "attribute": "type",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "template",
          "attribute": "template",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "output",
          "attribute": "output",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "css",
          "attribute": "css",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "model",
          "attribute": "model",
          "type": "object",
          "default": "{}"
        },
        {
          "name": "parameters",
          "attribute": "parameters",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "renditions",
          "attribute": "renditions",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "desc",
          "attribute": "desc",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "sourcerend",
          "attribute": "sourcerend",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "show",
          "attribute": "show",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "outputs",
          "attribute": "outputs",
          "type": "array",
          "default": "[\"\",\"web\",\"print\",\"epub\",\"fo\",\"latex\",\"plain\"]"
        },
        {
          "name": "parentModel",
          "type": "never[]",
          "default": "[]"
        },
        {
          "name": "behaviours",
          "attribute": "behaviours",
          "type": "array",
          "default": "[\"alternate\",\"anchor\",\"block\",\"body\",\"break\",\"cell\",\"cit\",\"document\",\"figure\",\"graphic\",\"heading\",\"inline\",\"link\",\"list\",\"listItem\",\"metadata\",\"note\",\"omit\",\"paragraph\",\"row\",\"section\",\"table\",\"text\",\"title\",\"webcomponent\"]"
        },
        {
          "name": "icon",
          "attribute": "icon",
          "type": "string",
          "default": "\"expand-more\""
        },
        {
          "name": "hasCustomBehaviour",
          "attribute": "has-custom-behaviour",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "model-changed"
        },
        {
          "name": "model-remove"
        },
        {
          "name": "model-move-down"
        },
        {
          "name": "model-move-up"
        },
        {
          "name": "current-changed"
        },
        {
          "name": "odd-copy"
        },
        {
          "name": "odd-paste"
        }
      ]
    },
    {
      "name": "pb-odd-elementspec-editor",
      "path": "./src/pb-odd-elementspec-editor.js",
      "description": "A wrapper for the popular codemirror code editor.",
      "attributes": [
        {
          "name": "endpoint",
          "type": "string"
        },
        {
          "name": "ident",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "mode",
          "description": "mode for an ´elementSpec` may be 'add', 'remove' or being undefined",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "models",
          "description": "array of ODD `model` elements",
          "type": "array",
          "default": "[]"
        }
      ],
      "properties": [
        {
          "name": "endpoint",
          "attribute": "endpoint",
          "type": "string"
        },
        {
          "name": "ident",
          "attribute": "ident",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "mode",
          "attribute": "mode",
          "description": "mode for an ´elementSpec` may be 'add', 'remove' or being undefined",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "models",
          "attribute": "models",
          "description": "array of ODD `model` elements",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "icon",
          "type": "string",
          "default": "\"expand-more\""
        }
      ],
      "events": [
        {
          "name": "element-spec-changed"
        },
        {
          "name": "element-spec-removed"
        },
        {
          "name": "odd-paste"
        },
        {
          "name": "current-changed"
        }
      ]
    },
    {
      "name": "pb-odd-editor",
      "path": "./src/pb-odd-editor.js",
      "description": "ODD editor component",
      "attributes": [
        {
          "name": "ident",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "mode",
          "description": "ElementSpec mode. Can be ´add´, ´change´ or undefined.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "models",
          "description": "Array of ´odd-model´ Elements",
          "type": "array"
        },
        {
          "name": "odd",
          "description": "the odd file being edited",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "elementSpecs",
          "description": "array of ´element-spec´ Elements of given odd file",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "source",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "title",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "title-short",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "description",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "namespace",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "root-path",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "loading",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "indentString",
          "type": "string",
          "default": "\"    \""
        },
        {
          "name": "output-prefix",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "output-root",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "currentSelection",
          "type": "object",
          "default": "{}"
        },
        {
          "name": "useNamespace",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "loggedIn",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "tabs",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "tabIndex",
          "type": "number",
          "default": "\"undefined\""
        },
        {
          "name": "hotkeys",
          "type": "object",
          "default": "{\"save\":\"ctrl+shift+s,command+shift+s\"}"
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "ident",
          "attribute": "ident",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "mode",
          "attribute": "mode",
          "description": "ElementSpec mode. Can be ´add´, ´change´ or undefined.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "models",
          "attribute": "models",
          "description": "Array of ´odd-model´ Elements",
          "type": "array"
        },
        {
          "name": "odd",
          "attribute": "odd",
          "description": "the odd file being edited",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "elementSpecs",
          "attribute": "elementSpecs",
          "description": "array of ´element-spec´ Elements of given odd file",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "source",
          "attribute": "source",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "title",
          "attribute": "title",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "titleShort",
          "attribute": "title-short",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "description",
          "attribute": "description",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "namespace",
          "attribute": "namespace",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "rootPath",
          "attribute": "root-path",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "loading",
          "attribute": "loading",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "indentString",
          "attribute": "indentString",
          "type": "string",
          "default": "\"    \""
        },
        {
          "name": "outputPrefix",
          "attribute": "output-prefix",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "outputRoot",
          "attribute": "output-root",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "currentSelection",
          "attribute": "currentSelection",
          "type": "object",
          "default": "{}"
        },
        {
          "name": "useNamespace",
          "attribute": "useNamespace",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "loggedIn",
          "attribute": "loggedIn",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "tabs",
          "attribute": "tabs",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "tabIndex",
          "attribute": "tabIndex",
          "type": "number",
          "default": "\"undefined\""
        },
        {
          "name": "selectedNavIndex",
          "type": "number",
          "default": "0"
        },
        {
          "name": "cssFile",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "hotkeys",
          "attribute": "hotkeys",
          "type": "object",
          "default": "{\"save\":\"ctrl+shift+s,command+shift+s\"}"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-login",
          "description": "When received, registers if user is logged in"
        },
        {
          "name": "pb-start-update"
        },
        {
          "name": "pb-end-update"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "default unnamed slot"
        }
      ],
      "cssProperties": [
        {
          "name": "--pb-heading-font-family",
          "description": "font family used for headings"
        },
        {
          "name": "--pb-heading-font-weight"
        },
        {
          "name": "--pb-heading-line-height"
        }
      ]
    },
    {
      "name": "pb-edit-app",
      "path": "./src/pb-edit-app.js",
      "description": "Editor component for the App Generator. Allows to edit all settings for an application.",
      "attributes": [
        {
          "name": "error",
          "type": "string"
        },
        {
          "name": "url",
          "type": "string"
        },
        {
          "name": "templates",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "error",
          "attribute": "error",
          "type": "string"
        },
        {
          "name": "url",
          "attribute": "url",
          "type": "string"
        },
        {
          "name": "templates",
          "attribute": "templates",
          "type": "array",
          "default": "[]"
        },
        {
          "name": "subscribe",
          "attribute": "subscribe",
          "description": "The name of the channel to subscribe to. Only events on a channel corresponding\nto this property are listened to.",
          "type": "string"
        },
        {
          "name": "subscribeConfig",
          "attribute": "subscribe-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to listen to.",
          "type": "object"
        },
        {
          "name": "emit",
          "attribute": "emit",
          "description": "The name of the channel to send events to.",
          "type": "string"
        },
        {
          "name": "emitConfig",
          "attribute": "emit-config",
          "description": "Configuration object to define a channel/event mapping. Every property\nin the object is interpreted as the name of a channel and its value should\nbe an array of event names to be dispatched.",
          "type": "object"
        },
        {
          "name": "waitFor",
          "attribute": "wait-for",
          "description": "A selector pointing to other components this component depends on.\nWhen method `wait` is called, it will wait until all referenced\ncomponents signal with a `pb-ready` event that they are ready and listening\nto events.",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Common property to disable the functionality associated with a component.\n`pb-highlight` and `pb-popover` react to this.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-start-update",
          "description": "Fired before the element updates its content"
        },
        {
          "name": "pb-end-update",
          "description": "Fired after the element has finished updating its content"
        }
      ]
    },
    {
      "name": "seed-element",
      "path": "./src/seed-element.js",
      "description": "bare bones sample to copy/paste for a new LitElement"
    },
    {
      "name": "pb-components-list",
      "path": "./src/docs/pb-components-list.js",
      "description": "Displays a list of components to view.",
      "attributes": [
        {
          "name": "json",
          "type": "object"
        },
        {
          "name": "with-demo",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "json",
          "attribute": "json",
          "type": "object"
        },
        {
          "name": "withDemo",
          "attribute": "with-demo",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "pb-api-component",
          "description": "if a component name is clicked"
        }
      ]
    },
    {
      "name": "pb-component-view",
      "path": "./src/docs/pb-component-view.js",
      "description": "Core viewer showing the element documentation and demos.",
      "attributes": [
        {
          "name": "default-title",
          "type": "string",
          "default": "\"Webcomponents API\""
        }
      ],
      "properties": [
        {
          "name": "defaultTitle",
          "attribute": "default-title",
          "type": "string",
          "default": "\"Webcomponents API\""
        }
      ],
      "cssProperties": [
        {
          "name": "--pb-header-background-color",
          "description": "Background color of the header"
        },
        {
          "name": "--pb-header-color",
          "description": "Color of header text"
        }
      ]
    },
    {
      "name": "pb-component-docs",
      "path": "./src/docs/pb-component-docs.js",
      "description": "An API viewer for webcomponents based on the JSON format produced\nby web-component-analyzer.",
      "attributes": [
        {
          "name": "file",
          "description": "Path to the JSON file generated by web-components-analyzer",
          "type": "string"
        },
        {
          "name": "demo",
          "description": "Path to the JSON file mapping component names to available demo files",
          "type": "string"
        }
      ],
      "properties": [
        {
          "name": "file",
          "attribute": "file",
          "description": "Path to the JSON file generated by web-components-analyzer",
          "type": "string"
        },
        {
          "name": "demo",
          "attribute": "demo",
          "description": "Path to the JSON file mapping component names to available demo files",
          "type": "string"
        },
        {
          "name": "view",
          "type": "PbComponentView"
        }
      ],
      "slots": [
        {
          "name": "logo",
          "description": "HTML to show as logo on top of the drawer"
        }
      ]
    }
  ]
}